<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>centerX = 436;
startY = 640;
txtSpd = 0.765;
sectionGap = 64;
titleGap = 40;
detailGap = 24;
totalSections = 12;
alarm[0] = 7;

ind = 0;
list[ind] = ds_list_create();  // 0 - producer
title[ind] = 'PRODUCER';
subList[ind] = false;
evtInd[ind] = 0;
ds_list_add(list[ind], "Light");
ds_list_add(list[ind], "Koala");
ds_list_add(list[ind], "Nikaple");
ds_list_add(list[ind], "Shiliu");
ds_list_add(list[ind], "Igzicorus");
ind += 1;

list[ind] = ds_list_create(); //1 - System
title[ind] = 'SYSTEM DESIGN';
subList[ind] = false;
evtInd[ind] = 0;
ds_list_add(list[ind], "Light");
ds_list_add(list[ind], "Koala");
ind += 1;


list[ind] = ds_list_create(); //2 - story
title[ind] = 'STORY DESIGN';
subList[ind] = false;
evtInd[ind] = 0;
ds_list_add(list[ind], "Light");
ds_list_add(list[ind], "Koala");
ind += 1;

list[ind] = ds_list_create(); //3 - Level
title[ind] = 'LEVEL DESIGN'; 
subList[ind] = false;
subListCount[ind] = 2;
evtInd[ind] = 0

ds_list_add(list[ind], "Light");
ds_list_add(list[ind], "Koala");
ind += 1;

title[ind] = 'SECRETS, PUZZLES &amp; MINI GAMES'; //4 - Secrets, Puzzles &amp; Mini Games
subList[ind] = true;
subListCount[ind] = 2;
evtInd[ind] = 1;
central[ind] = true;

subCategory[ind,0] = ds_list_create();
subCategory[ind,1] = ds_list_create();
ds_list_add(subCategory[ind,0], 'Secret 1');        ds_list_add(subCategory[ind,1], 'Light');
ds_list_add(subCategory[ind,0], 'Secret 2');        ds_list_add(subCategory[ind,1], 'Light');
ds_list_add(subCategory[ind,0], 'MMM Fingers');     ds_list_add(subCategory[ind,1], 'Light');
ds_list_add(subCategory[ind,0], 'Echoshift');       ds_list_add(subCategory[ind,1], 'Light, Shiliu');
ds_list_add(subCategory[ind,0], 'Bubble Stage');    ds_list_add(subCategory[ind,1], 'Light, Koala');
ds_list_add(subCategory[ind,0], 'Side Tower');      ds_list_add(subCategory[ind,1], 'Shiliu');
ds_list_add(subCategory[ind,0], 'Saint Cross');     ds_list_add(subCategory[ind,1], 'Light');
ds_list_add(subCategory[ind,0], 'Renal Treasure');  ds_list_add(subCategory[ind,1], 'Light');
ds_list_add(subCategory[ind,0], 'Fairy Tail');      ds_list_add(subCategory[ind,1], 'Light');
if(global.specialBlock[14])
{
ds_list_add(subCategory[ind,0], 'Secret 3');        ds_list_add(subCategory[ind,1], 'Light, Igzicorus');
}
else
{
ds_list_add(subCategory[ind,0], '???');             ds_list_add(subCategory[ind,1], '???');
}
ds_list_add(subCategory[ind,0], '???');             ds_list_add(subCategory[ind,1], '???');
ds_list_add(subCategory[ind,0], '???');             ds_list_add(subCategory[ind,1], '???');
ind += 1;



title[ind] = 'BATTLE DESIGN';  //5 - Battle
subList[ind] = true;
subListCount[ind] = 3;
evtInd[ind] = 2;

subCategory[ind,0] = ds_list_create();
subCategory[ind,1] = ds_list_create();
subCategory[ind,2] = ds_list_create();
ds_list_add(subCategory[ind,0], spr_slime_s_combat);      ds_list_add(subCategory[ind,1], 'Small Slime');            ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_slime_red_combat);      ds_list_add(subCategory[ind,1], 'Red Slime');              ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_slime_black_combat);      ds_list_add(subCategory[ind,1], 'Black Slime');            ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_slime_king_combat);      ds_list_add(subCategory[ind,1], 'Slime King');             ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_batChild_combat);      ds_list_add(subCategory[ind,1], 'Small Bat');              ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_orcWarrior_combat);      ds_list_add(subCategory[ind,1], 'Orc Warrior');            ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_orcSwordsman_combat);      ds_list_add(subCategory[ind,1], 'Orc Swordsman');          ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_stone_combat);      ds_list_add(subCategory[ind,1], 'Stone');                  ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_skeleton_combat);      ds_list_add(subCategory[ind,1], 'Skeleton');               ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_skeletonSwordsman_combat);      ds_list_add(subCategory[ind,1], 'Skeleton Swordsman');     ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_skeletonKing1);      ds_list_add(subCategory[ind,1], 'Skeleton King');          ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_batBattle);      ds_list_add(subCategory[ind,1], 'Bat');                    ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_dlFasf);      ds_list_add(subCategory[ind,1], 'FASF');                   ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_magelv1_combat);      ds_list_add(subCategory[ind,1], 'Junior Mage');            ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_yellowKnight1);      ds_list_add(subCategory[ind,1], 'Yellow Knight');          ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_guardlv1_battle);      ds_list_add(subCategory[ind,1], 'Junior Guard');           ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_redBat_combat);      ds_list_add(subCategory[ind,1], 'Red Bat');                ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_smileSlime_combat);      ds_list_add(subCategory[ind,1], 'Smiling Slime');          ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_steel_combat);      ds_list_add(subCategory[ind,1], 'Steel');                  ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_diaoSlime_combat);      ds_list_add(subCategory[ind,1], 'Diao Slime');             ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_magicianlv1_combat);      ds_list_add(subCategory[ind,1], 'Junior Magician');        ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_guardlv2Combat);      ds_list_add(subCategory[ind,1], 'Intermediate Guard');     ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_magician2Battle_1);      ds_list_add(subCategory[ind,1], 'Senior Magician');        ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_mage2Battle1);      ds_list_add(subCategory[ind,1], 'Senior Mage');            ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_orcMageCombat);      ds_list_add(subCategory[ind,1], 'Orc Mage');               ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_blueKnight1);      ds_list_add(subCategory[ind,1], 'Blue Knight');            ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_variationSkeletonCombat);      ds_list_add(subCategory[ind,1], 'Variation Skeleton');     ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_dlSuperFasf1);      ds_list_add(subCategory[ind,1], 'Super FASF');             ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_tlGuardLv3);      ds_list_add(subCategory[ind,1], 'Senior Guard');           ds_list_add(subCategory[ind,2], 'Koala');

ds_list_add(subCategory[ind,0], spr_draculaCombat);      ds_list_add(subCategory[ind,1], 'Dracula');                ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_variationBat_combat);      ds_list_add(subCategory[ind,1], 'Giant Bat');              ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_orcSkeleton_combat);      ds_list_add(subCategory[ind,1], 'Seleton Orc');            ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_redKnightCombat);      ds_list_add(subCategory[ind,1], 'Red Knight');             ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_silverEvilSlime_combat);      ds_list_add(subCategory[ind,1], 'Silver Evil Slime');      ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_goldEvilSlime_combat);      ds_list_add(subCategory[ind,1], 'Gold Evil Slime');        ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_swordMaster_combat);      ds_list_add(subCategory[ind,1], 'Sword Master');           ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_blackDevilMagician_combat);      ds_list_add(subCategory[ind,1], 'Black Devil Magician');   ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_burningSlime_combat);      ds_list_add(subCategory[ind,1], 'Burning Slime');          ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_burningKnight_combat);      ds_list_add(subCategory[ind,1], 'Burning Knight');         ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_burningFasf_center);      ds_list_add(subCategory[ind,1], 'Burning FASF');           ds_list_add(subCategory[ind,2], 'Koala');
ds_list_add(subCategory[ind,0], spr_darkMage_combat);      ds_list_add(subCategory[ind,1], 'Dark Mage');              ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_darkSummoner_combat);      ds_list_add(subCategory[ind,1], 'Dark Summoner');          ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_darkWarrior_combat);      ds_list_add(subCategory[ind,1], 'Dark Warrior');           ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_darkLord_combat);      ds_list_add(subCategory[ind,1], 'Dark Lord');              ds_list_add(subCategory[ind,2], 'Light');

ds_list_add(subCategory[ind,0], spr_miniboss1_combat);      ds_list_add(subCategory[ind,1], 'Yaranaika');              ds_list_add(subCategory[ind,2], 'Light, Koala');
ds_list_add(subCategory[ind,0], -100);      ds_list_add(subCategory[ind,1], '3B6');                    ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_faShiLiu_se);      ds_list_add(subCategory[ind,1], 'FaShiLiu');               ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_Octopus_combat);      ds_list_add(subCategory[ind,1], 'Faro');                   ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_diamante_combat);      ds_list_add(subCategory[ind,1], 'Mr.Diamante');            ds_list_add(subCategory[ind,2], 'Nikaple');
ds_list_add(subCategory[ind,0], spr_trebole_combat2);      ds_list_add(subCategory[ind,1], 'Mr.Trebole');             ds_list_add(subCategory[ind,2], 'Nikaple');
ds_list_add(subCategory[ind,0], spr_corazoneCombat);      ds_list_add(subCategory[ind,1], 'Mr.Corazone');            ds_list_add(subCategory[ind,2], 'Nikaple');
ds_list_add(subCategory[ind,0], spr_pica_combat);      ds_list_add(subCategory[ind,1], 'Mr.Pica');                ds_list_add(subCategory[ind,2], 'Nikaple');
ds_list_add(subCategory[ind,0], -101);      ds_list_add(subCategory[ind,1], '4B6');                    ds_list_add(subCategory[ind,2], 'Light');
ds_list_add(subCategory[ind,0], spr_devilLead_combat);      ds_list_add(subCategory[ind,1], 'The Tower Lead');         ds_list_add(subCategory[ind,2], 'Light, Nikaple');
if(global.SpaceItems[4])
{
ds_list_add(subCategory[ind,0], spr_taisa);      ds_list_add(subCategory[ind,1], 'Fapple');                    ds_list_add(subCategory[ind,2], 'Nikaple');
}
else
{
ds_list_add(subCategory[ind,0], -1);      ds_list_add(subCategory[ind,1], '???');                    ds_list_add(subCategory[ind,2], '???');
}
ds_list_add(subCategory[ind,0], -1);      ds_list_add(subCategory[ind,1], '???');                    ds_list_add(subCategory[ind,2], '???');
ind += 1;

list[ind] = ds_list_create();  // 6 - Credit
title[ind] = 'CREDITS';
subList[ind] = false;
evtInd[ind] = 0;
ds_list_add(list[ind], "A64");
ds_list_add(list[ind], "Kuri");
ds_list_add(list[ind], "Lunatic Element");
ds_list_add(list[ind], "Andres Sgarrido");
ds_list_add(list[ind], "Sword Slinger");
ds_list_add(list[ind], "FailJguy");
ds_list_add(list[ind], "Xiao Cong");
ds_list_add(list[ind], "PP");
ind += 1;

list[ind] = ds_list_create();  // 7 - Testers
title[ind] = 'TESTERS';
subList[ind] = false;
evtInd[ind] = 0;
ds_list_add(list[ind], "A64");
ds_list_add(list[ind], "Kuri");
ds_list_add(list[ind], "Andres Sgarrido");
ds_list_add(list[ind], "Lunatic Element");
ds_list_add(list[ind], "Mirror Whisper");
ds_list_add(list[ind], "Sword Slinger");
ds_list_add(list[ind], "FASF");
ds_list_add(list[ind], "Xiao Cong");
ds_list_add(list[ind], "Leng Jian")
ds_list_add(list[ind], "51");
ds_list_add(list[ind], "07");
ds_list_add(list[ind], "Ka Zhu");
ind += 1;

list[ind] = ds_list_create();  // 8 - Special Thanks
title[ind] = 'SPECIAL THANKS';
subList[ind] = false;
evtInd[ind] = 0;
ds_list_add(list[ind], "Lunatic Element");
ds_list_add(list[ind], "Sunbla");
ds_list_add(list[ind], "A64");
ds_list_add(list[ind], "Andres Sgarrido");
ds_list_add(list[ind], "Sword Slinger");
ds_list_add(list[ind], "FailJguy");
ds_list_add(list[ind], "(and you)");
ind += 1;

list[ind] = ds_list_create();  // 9 - Sprite Resources
title[ind] = 'SPRITE RESOURCES';
subList[ind] = false;
evtInd[ind] = 0;
central[ind] = true;
ds_list_add(list[ind], "RPG Maker vx");
ds_list_add(list[ind], "Magic Tower Sample");
ds_list_add(list[ind], "I wanna be the guy");
ds_list_add(list[ind], "Not Another Needle Game");
ds_list_add(list[ind], "I wanna be the calamity fortune");
ds_list_add(list[ind], "I wanna fapple");
ds_list_add(list[ind], "i wanna be the strong");
ds_list_add(list[ind], "http://spriters-resource.com");
ind += 1;
  

title[ind] = 'BGM';  // 10 - BGM
subList[ind] = true;
evtInd[ind] = 3;

subCategory[ind,0] = ds_list_create();
subCategory[ind,1] = ds_list_create();
ds_list_add(subCategory[ind,0], 'Title Screen');         ds_list_add(subCategory[ind,1], 'S.S.H - The One Who Cannot Forget Remix');
ds_list_add(subCategory[ind,0], 'Floor 1 to 10');        ds_list_add(subCategory[ind,1], 'S.S.H - Big Blue Rock-Metal Remix');
ds_list_add(subCategory[ind,0], 'Secret 1');             ds_list_add(subCategory[ind,1], 'Bloody Tears Awesome Version');
ds_list_add(subCategory[ind,0], 'Secret 2');             ds_list_add(subCategory[ind,1], 'Amane - Eternal Fullmoon');
ds_list_add(subCategory[ind,0], 'Yaranaika Fight');      ds_list_add(subCategory[ind,1], 'Yaranaika');
ds_list_add(subCategory[ind,0], 'Basement Floors');      ds_list_add(subCategory[ind,1], 'Semaphore - Zenmuron Dark Rift N64 2014');
ds_list_add(subCategory[ind,0], '3B6 Fight');            ds_list_add(subCategory[ind,1], '-Angel Fall-');
ds_list_add(subCategory[ind,0], 'FaShiLiu Fight');       ds_list_add(subCategory[ind,1], 'Waterflame - Blast processing');
ds_list_add(subCategory[ind,0], 'MMM Fingers');          ds_list_add(subCategory[ind,1], "Clastodon - I Can't Hear My Inner Demons");
ds_list_add(subCategory[ind,0], 'Side Tower');           ds_list_add(subCategory[ind,1], "MKDEV_-_DVD-lab_Pro_2.28crk");
ds_list_add(subCategory[ind,0], 'Floor 11 to 15');       ds_list_add(subCategory[ind,1], 'ParagonX9 - Chaoz Fantasy');
ds_list_add(subCategory[ind,0], 'Burning Zone');         ds_list_add(subCategory[ind,1], 'yhheart keeps burning RMX');
ds_list_add(subCategory[ind,0], 'Frozen Zone');          ds_list_add(subCategory[ind,1], 'Sonic 3 Ice Cap Act 3 Remix');
if(global.special[13])
{
ds_list_add(subCategory[ind,0], 'Fairy Tail');           ds_list_add(subCategory[ind,1], "bluelephan2 - Glacial");
}
else
{
ds_list_add(subCategory[ind,0], '???');                  ds_list_add(subCategory[ind,1], '???');
}
ds_list_add(subCategory[ind,0], 'Faro Fight');           ds_list_add(subCategory[ind,1], 'S.S.H - Stand Up Against Myself Remix');
ds_list_add(subCategory[ind,0], 'Mr.Diamante Fight');    ds_list_add(subCategory[ind,1], 'S.S.H - Holy Orders Remix ');
ds_list_add(subCategory[ind,0], 'Mr.Trebole Fight');     ds_list_add(subCategory[ind,1], 'Cantarella Grace Edition');
ds_list_add(subCategory[ind,0], 'Mr.Pica Fight');        ds_list_add(subCategory[ind,1], 'LeaF - Calamity Fortune');
ds_list_add(subCategory[ind,0], 'Floor 16 and higher');  ds_list_add(subCategory[ind,1], 'S.S.H - False Prophet');
if(global.specialBlock[14])
{
ds_list_add(subCategory[ind,0], 'Secret 3');                  ds_list_add(subCategory[ind,1], 'Memme - Extreme Fantasy');
}
else
{
ds_list_add(subCategory[ind,0], '???');                  ds_list_add(subCategory[ind,1], '???');
}
ds_list_add(subCategory[ind,0], '4B6 Fight');            ds_list_add(subCategory[ind,1], 'S.S.H - The Decisive Battle Remix');
ds_list_add(subCategory[ind,0], 'Tower Lead Fight');     ds_list_add(subCategory[ind,1], 'S.S.H - ToP Fighting of the Spirit Remix');
if(global.SpaceItems[4])
{
ds_list_add(subCategory[ind,0], 'Fapple Fight');         ds_list_add(subCategory[ind,1], 'DoDonPachi DaiOuJou - Death Label 95-97-02');
}
else
{
ds_list_add(subCategory[ind,0], '???');                  ds_list_add(subCategory[ind,1], '???');
}
ds_list_add(subCategory[ind,0], 'Gallery');              ds_list_add(subCategory[ind,1], 'Memme - Erebus');
ds_list_add(subCategory[ind,0], 'Bad Ending');           ds_list_add(subCategory[ind,1], 'tourmithefly - End of it all');
ds_list_add(subCategory[ind,0], 'Gay Ending');           ds_list_add(subCategory[ind,1], 'Caramell - Caramelldansen');
ds_list_add(subCategory[ind,0], 'Sleep Ending');         ds_list_add(subCategory[ind,1], 'S.S.H - Wish');
ds_list_add(subCategory[ind,0], '???');                  ds_list_add(subCategory[ind,1], '???');
ds_list_add(subCategory[ind,0], '???');                  ds_list_add(subCategory[ind,1], '???');
ds_list_add(subCategory[ind,0], '???');                  ds_list_add(subCategory[ind,1], '???');
ds_list_add(subCategory[ind,0], 'Other Resources');      ds_list_add(subCategory[ind,1], 'RPG Maker vx');
ds_list_add(subCategory[ind,0], '');                     ds_list_add(subCategory[ind,1], 'Magic Tower Sample');
ds_list_add(subCategory[ind,0], '');                     ds_list_add(subCategory[ind,1], 'Not Another Needle Game');
ds_list_add(subCategory[ind,0], '');                     ds_list_add(subCategory[ind,1], 'http://www.newgrounds.com');
ind += 1;

list[ind] = ds_list_create();  // 11 - engine
title[ind] = 'ENGINE';
subList[ind] = false;
evtInd[ind] = 0;
ds_list_add(list[ind], "i wanna be the engine Nikaple edition");
ind += 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(imageInd &lt; 3)
{
    imageInd += 1;
}
else
{
    imageInd = 0;
}
alarm[0] = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startY -= txtSpd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_valign(fa_middle);

if(currentHeight &gt; -32 &amp;&amp; currentHeight &lt; 640)
{
    draw_set_font(fontSETitle);
    captionName = title[section];
    spacePos = string_pos(' ', captionName);
    if(spacePos &amp;&amp; !central[section])
    {
        captionLen = string_length(captionName);
        spaceWidth = string_width('_');
        leftContent = string_copy(captionName,0, spacePos - 1);
        draw_set_halign(fa_right);
        draw_text(centerX-spaceWidth/2, currentHeight, leftContent);
        rightContent = string_copy(captionName,spacePos + 1, captionLen - spacePos);
        draw_set_halign(fa_left);
        draw_text(centerX+spaceWidth/2, currentHeight, rightContent);
    }
    else
    {
        draw_set_halign(fa_center);
        draw_text(centerX, currentHeight, captionName);
    }  
}
currentHeight += titleGap;
draw_set_halign(fa_center);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(15);

listCount = ds_list_size(subCategory[section,0]);
draw_set_font(fontSECredit);
for(detailInd = 0; detailInd &lt; listCount; detailInd += 1)
{
    if(currentHeight &gt; -32 &amp;&amp; currentHeight &lt; 640)
    {
        draw_set_halign(fa_right);
        leftContent = ds_list_find_value(subCategory[section,0], detailInd);
        draw_text(centerX - 80, currentHeight, leftContent);
        draw_set_halign(fa_center);
        draw_text(centerX - 64, currentHeight, '-');
        draw_set_halign(fa_left);
        rightContent = ds_list_find_value(subCategory[section,1], detailInd);
        draw_text(centerX - 48, currentHeight, rightContent);
    }
    currentHeight += detailGap;
}

currentHeight += sectionGap;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(15);

listCount = ds_list_size(subCategory[section,0]);
draw_set_font(fontSECredit);
for(detailInd = 0; detailInd &lt; listCount; detailInd += 1)
{
    sprInd = ds_list_find_value(subCategory[section,0], detailInd);
    if(sprInd &lt; 0)
    {
        if(sprInd == -1 || sprInd == -101)
        {
            imgHeight = 24;
        }
        else if(sprInd == -100)
        {
            imgHeight = 56;
        }
    }
    else
    {
        imgHeight = sprite_get_height(sprInd)/2 + 8;
    }
    currentHeight += imgHeight - 24;
    if(currentHeight &gt; -64 &amp;&amp; currentHeight &lt; 672)
    {
        if(sprInd &lt; 0)
        {
            if(sprInd == -1)
            {
                draw_set_halign(fa_center);
                draw_text(centerX, currentHeight, '???');
            }
            else if(sprInd == -100)
            {
                draw_sprite(spr_bePhase2_se, imageInd, centerX - 64, currentHeight);
                draw_sprite(spr_bePhase1_se, imageInd, centerX, currentHeight);
                draw_sprite(spr_bePhase3_se, imageInd, centerX + 64, currentHeight);
            }
            else if(sprInd == -101)
            {
                draw_sprite(spr_npc1, imageInd, centerX - 96, currentHeight - 16);
                draw_sprite(spr_npc2, imageInd, centerX - 48, currentHeight - 16);
                draw_sprite(spr_npc3, imageInd, centerX + 16, currentHeight - 16);
                draw_sprite(spr_npc4, imageInd, centerX + 64, currentHeight - 16);
            }
        }
        else
        {
            draw_sprite(sprInd, imageInd, centerX, currentHeight);
        }
        draw_set_halign(fa_right);
        leftContent = ds_list_find_value(subCategory[section,1], detailInd);
        draw_text(centerX - 16, currentHeight + imgHeight, leftContent);
        if(leftContent != "")
        {
            draw_set_halign(fa_center);
            draw_text(centerX, currentHeight + imgHeight, '-');
        }
        draw_set_halign(fa_left);
        rightContent = ds_list_find_value(subCategory[section,2], detailInd);
        draw_text(centerX + 16, currentHeight + imgHeight, rightContent);
    }
    currentHeight += detailGap + imgHeight + 20;
}

currentHeight += sectionGap;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(15);

listCount = ds_list_size(subCategory[section,0]);
draw_set_font(fontSECredit);
for(detailInd = 0; detailInd &lt; listCount; detailInd += 1)
{
    if(currentHeight &gt; -32 &amp;&amp; currentHeight &lt; 640)
    {
        draw_set_halign(fa_right);
        leftContent = ds_list_find_value(subCategory[section,0], detailInd);
        draw_text(centerX - 16, currentHeight, leftContent);
        draw_set_halign(fa_center);
        draw_text(centerX, currentHeight, '-');
        draw_set_halign(fa_left);
        rightContent = ds_list_find_value(subCategory[section,1], detailInd);
        draw_text(centerX + 16, currentHeight, rightContent);
    }
    currentHeight += detailGap;
}

currentHeight += sectionGap;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(15);

listCount = ds_list_size(list[section]);
draw_set_font(fontSECredit);
for(detailInd = 0; detailInd &lt; listCount; detailInd += 1)
{
    if(currentHeight &gt; -32 &amp;&amp; currentHeight &lt; 640)
    {
        detailContent = ds_list_find_value(list[section], detailInd);
        draw_text(centerX, currentHeight, detailContent);
    }
    currentHeight += detailGap;
}

currentHeight += sectionGap;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;totalSections;i+=1)
{
    if(subList[i])
    {
        for(j=0;j&lt;subListCount[i];j+=1)
        {
            ds_list_destroy(subCategory[i,j]);
        }
    }
    else
    {
        ds_list_destroy(list[i]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
currentHeight = startY;
draw_set_alpha(1);
draw_set_color(c_silver);
for(section = 0; section &lt; totalSections; section += 1)
{
    event_user(evtInd[section]);
}
//draw_text(32,32,string(640-startY));



draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
