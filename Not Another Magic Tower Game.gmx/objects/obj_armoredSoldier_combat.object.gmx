<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_armoredSoldier_combat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>obj_monsterBattlePrototype</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
name = "Armored Soldier";
image_speed = 1/8;
asShadowX = ds_list_create();
asShadowY = ds_list_create();
//dashQueueX = ds_queue_create();
//dashQueueY = ds_queue_create();
dashLine = ds_queue_create();
x = 400;
y = 96;
alarm[3] = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(asShadowX);
ds_list_destroy(asShadowY);
ds_queue_destroy(dashLine);
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,obj_asBGChanger);
instance_create(x,y,obj_asHaki);
instance_create(0,0,obj_asQTEController);
qtePlayer = instance_create(player.x,player.y, obj_asQTEPlayer);
qtePlayer.sprite_index = player.sprite_index;
qtePlayer.image_index = player.image_index;
qtePlayer.image_xscale = player.image_xscale;
qtePlayer.image_speed = 1/8;
player.frozen = true;
player.visible = false;
bow.visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(y &lt; 128)
{
    y += 5;
    alarm[10] = 1;
}
else
{
    instance_create(0,0, obj_asShockController);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dashCount &gt; 0)
{
    type = irandom_range(0,3);
    if(type == 0)
    {
        sx = 0; sy = random_range(0,608);
    }
    else if(type == 1)
    {
        sx = random_range(0,800); sy = 0;
    }
    else if(type == 2)
    {
        sx = 800; sy = random_range(0,608);
    }
    else if(type == 3)
    {
        sx = random_range(0,800); sy = 608;
    }
    line = instance_create(sx,sy,obj_asAttackLine);
    ds_queue_enqueue(dashLine,line);
    dashCount -= 1;
    alarm[7] = dashGap;
    dashGap -= 3;
}
else
{
    if(player_is_alive())
    {
        forAch = false;
        x = 400;
        y = -32;
        alarm[10] = 50;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[5] = 0;
view_xview[0] = 0;
view_yview[0] = 0;
if(left)
{
    direction = 180;
}
else
{
    direction = 0;
}
speed += 0.4;
if(x &gt; 832 || x &lt; -16)
{
    speed = 0;
    if(player_is_alive())
    {
        forAch = true;
        dashCount = 10;
        dashGap = 40;
        alarm[7] = 70;
    }
}
else
{
    alarm[6] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!sndroar)
{
    sndroar = true;
    sound_fix(sndRoar);
}
view_xview[0] = random_range(-3,3);
view_yview[0] = random_range(-3,3);
s = instance_create(x,y,obj_asSpike);
s.direction = random_range(dirMin, dirMax);
s.speed = random_range(8, 12);
alarm[5] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(abs(x - targetX) &lt; 8)
{
    dir = sign(targetX - x);
    x += 8 * dir;
    alarm[4] = 1;
}
else
{
    x = targetX;
    if(x &lt; 400)
    {
        dirMin = -30;
        dirMax = 30;
        left = false;
    }
    else
    {
        dirMin = 150;
        dirMax = 210;
        left = true;
    }
    sndroar = false;
    alarm[5] = 30;
    alarm[6] = 150;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(point_distance(x,y,400,459) &lt; 20)
{
    x = 400;
    y = 459;
    hspeed = 0;
    vspeed = 0;
    instance_create(0,0,view_shaker1);
    instance_create(0,0,obj_asLaserController);
}
else
{
    move_towards_point(400,459,20);
    alarm[3] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ds_list_size(asShadowX) == 7)
{
    ds_list_delete(asShadowX, 0);
    ds_list_delete(asShadowY, 0);
}
ds_list_add(asShadowX, xprevious);
ds_list_add(asShadowY, yprevious);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(dash)
{
    if(dashCountDown &gt; 0)
    {
        dashCountDown -= 1;
    }
    else
    {
        if(!dashStart)
        {
            if(ds_queue_size(dashLine) &gt; 0)
            {
                cLine = ds_queue_dequeue(dashLine);
                x = cLine.x;
                y = cLine.y;
                direction = cLine.direction;
                image_angle = direction - 90;
                speed = 35;
                cLine.finished = true;
                dashStart = true;
            }
        }
        else
        {
            if(x &gt; 850 || x &lt; -50 || y &gt; 650 || y &lt; -50)
            {
                dashStart = false;
                dashCountDown = dashGap2;
                dashGap2 -= 2;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(forAch)
{
    if(!global.achievements[83])
    {
        ch = instance_create(0,608,obj_achievements);
        ch.index = 83;
        global.achievements[83] = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>listSize = ds_list_size(asShadowX);
for(i = 0; i &lt; listSize; i += 1)
{
    draw_sprite_ext(sprite_index, image_index, 
                      ds_list_find_value(asShadowX, listSize - i - 1), 
                      ds_list_find_value(asShadowY, listSize - i - 1), 
                      1,1,0,c_white, (0.9 - i * 0.1)*image_alpha);
}
draw_current();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
