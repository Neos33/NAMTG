<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentStep = 0;
personIndex = 6;
start = false;
blackAlpha = 0;
view_xview[1] = 0;
view_yview[1] = 544;
alarm[11] = 1;
with(player)
{
    frozen = true;
    image_alpha = 0;
}

alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_faroJkDoorIn.alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*global.testStep7 = obj_osuController.time;
global.testPos7 = SS_GetSoundPosition(global.BGM_Faro);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>start = true;
player.frozen = false;
player.image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(start)
{
    if(currentStep == totalTime * 50)
    {
        start = false;
    }
    currentStep += 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_jkExitDoor.transport)
{
    start = false;
}

if(keyboard_check_direct(global.downbutton))
{
    if(player_is_alive())
    {
        player.sprite_index = sprPlayerIdle;
        player.vspeed = 0;
        player.x = startX;
        player.y = startY;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == ExtraJKBonus)
    exit;
//draw_set_color(c_silver);
//draw_rectangle(0,view_yview[1],800,view_yview[1] + 64, false);

draw_set_color(c_black);
draw_set_font(fontBasicInfo);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_alpha(1);
draw_text(16, view_yview[1] + 32, "Lives:");
draw_set_font(fontBasicInfoMini);
draw_text(240, view_yview[1] + 21, "Down - Back to Start Position");
draw_text(240, view_yview[1] + 43, "Backspace - N/A");
draw_text(472, view_yview[1] + 21, "R - Retry");
draw_text(472, view_yview[1] + 43, "Ctrl + R - Same as R");


for(var i = 0; i &lt;= personIndex; i+=1)
{
    draw_sprite_ext(sprPlayerIdle, 0, view_xview[1] + 80 + 24 * i, view_yview[1] + 34, 0.6,0.6,0,c_white,1);
}

for(var i = personIndex + 1; i &lt; 7; i+=1)
{
    draw_sprite_ext(sprPlayerIdle, 0, view_xview[1] + 80 + 24 * i, view_yview[1] + 34, 0.6, 0.6, 0, c_black, 0.6);
}
draw_set_color(c_green);
draw_line_width(view_xview[1] + 66, view_yview[1] + 45, view_xview[1] + 66 + 24 * star3, view_yview[1] + 45, 3);
draw_set_color(c_yellow);
draw_line_width(view_xview[1] + 66 + 24 * star3, view_yview[1] + 45, view_xview[1] + 66 + 24 * star2, view_yview[1] + 45, 3);
draw_set_color(c_red);
draw_line_width(view_xview[1] + 66 + 24 * star2, view_yview[1] + 45, view_xview[1] + 66 + 24 * star1, view_yview[1] + 45, 3);


draw_set_font(font24);
draw_set_halign(fa_right);
draw_set_valign(fa_middle);
draw_set_color(c_black);
draw_set_alpha(1);
draw_text(768, view_yview[1] + 32, string_format((round((totalTime * 50 - currentStep) / 5) / 10), 3, 1));

draw_set_circle_precision(64);
draw_set_color(make_color_rgb(47,47,47));
draw_circle(672, view_yview[1] + 32, 28, false);
draw_set_color(c_green);
drawArc(totalTime * 6,0.5, 27, 90, 672, view_yview[1] + 32, true);
draw_set_color(c_orange);
drawArc(currentStep/50 * 6,0.5, 27, 90, 672, view_yview[1] + 32, true);

draw_set_alpha(blackAlpha);
draw_set_color(c_black);
draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + 800, view_yview[0] + 544, false);
draw_rectangle(view_xview[1], view_yview[1], view_xview[1] + 800, view_yview[1] + 64, false);




draw_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
