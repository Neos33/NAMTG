<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>initialized = 0;

dontDraw = false;

numOnly = 0;

dontDrawMonster = 0;

battleBGM = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.GalleryBossFight)
{
    recoveryCountDown = 100;
}
else
{
    recoveryCountDown = 10;
}
if(initialized) exit;

// Super FASF
if(room == battlefasfroom || room == Roomavoidence)
{
    if(!instance_exists(obj_superFasf_combat) &amp;&amp; room != Roomavoidence)
    {
        m = instance_create(704, 544, global.combatObj);
        m.hp = global.mHP;
        m.atk = global.mAtk;
        m.def = global.mDef;
        m.ex = global.mEx;
    }
    else
    {
        obj_superFasf_combat.hspeed = 0;
        obj_superFasf_combat.vspeed = 0;
        obj_superFasf_combat.visible = 1;
        obj_superFasf_combat.x=400;
        obj_superFasf_combat.y=304;
        obj_superFasf_combat.image_blend = c_red;
        obj_superFasf_combat.image_speed = 1 / 6;
        obj_superFasf_combat.image_index = 0;
    }
}
else
{
    m = instance_create(704, 544, global.combatObj);
    m.hp = global.mHP;
    m.atk = global.mAtk;
    m.def = global.mDef;
    m.ex = global.mEx;
}
global.cooldown = false;
if(!FMODInstanceGetPaused(global.currentBGM))
{
    FMODInstanceSetPaused(global.currentBGM, true);
    //global.pausedBGM = global.currentBGM;
}

// 1st list of battle songs
if(global.mDef &lt; 75)
{
    if(room == battleroom4 || room == battleroom6)
    {
        battleBGM = choose(sndBattle3, sndBattle4);
    }
    /*else if(room ==battleroom12)
    {
    //    battleBGM=happymusic;
    }*/
    else
    {
        battleBGM = choose(sndBattle1, sndBattle2);
    }
}
// 2nd list of battle songs
else if(global.mDef &lt;= 135)
{
    if(room == rSilverEvilSlime || room == rGoldEvilSlime)
    {
        battleBGM = sndPokemonBattle1;
    }
    else
    {
        battleBGM = choose(sndBattle5, sndBattle6, sndBattle7, sndBattle8);
    }
}
// Last list of battle songs
else
{
    battleBGM = sndBattle9;
}
if(room != battlefasfroom &amp;&amp; 
    room != Roomavoidence &amp;&amp; 
    room != battleroom12 &amp;&amp; 
    room != rDracula &amp;&amp; 
    room != battleroom_bf &amp;&amp; 
    global.combatObj != obj_faro_combat &amp;&amp; 
    room != rDiamante &amp;&amp; 
    room != rPica &amp;&amp; 
    room != rDragonStart &amp;&amp; 
    room != rTrebole &amp;&amp; 
    room != rCorazone &amp;&amp; 
    room != rDemonLead &amp;&amp; 
    room != rTaisa)
{
    sound_loop(battleBGM);
}
else if(room == battlefasfroom)
{
    global.currentBGM = scrAudioGetID("BGMsupfasf");
    if(FMODInstanceGetPaused(scrAudioGetID("BGMsupfasf")))
    {
        audio_resumemusic_volume(scrAudioGetID("BGMsupfasf"));
    }
    else if(!FMODInstanceIsPlaying(scrAudioGetID("BGMsupfasf")))
    {
        audio_loopmusic_volume(scrAudioGetID("BGMsupfasf"));   
    }
    /*else if(!SS_IsSoundLooping(scrAudioGetID("BGMsupfasf")))
    {
        audio_loopmusic_volume(scrAudioGetID("BGMsupfasf"));
    }*/
}
else if(room == battleroom12)
{
    global.currentBGM = scrAudioGetID("BGM_RedKey");
    if(FMODInstanceGetPaused(scrAudioGetID("BGM_RedKey")))
    {
        audio_resumemusic_volume(scrAudioGetID("BGM_RedKey"));
    }
    else if(!FMODInstanceIsPlaying(scrAudioGetID("BGM_RedKey")))
    {
        audio_loopmusic_volume(scrAudioGetID("BGM_RedKey"));   
    }
    /*else if(!SS_IsSoundLooping(scrAudioGetID("BGM_RedKey")))
    {
        audio_loopmusic_volume(scrAudioGetID("BGM_RedKey"));
    }*/
}
else if(room == rDracula)
{
    global.currentBGM = scrAudioGetID("BGMDracula");
    if(FMODInstanceGetPaused(scrAudioGetID("BGMDracula")))
    {
        audio_resumemusic_volume(scrAudioGetID("BGMDracula"));
    }
    else if(!FMODInstanceIsPlaying(scrAudioGetID("BGMDracula")))
    {
        audio_loopmusic_volume(scrAudioGetID("BGMDracula"));   
    }
    /*else if(!SS_IsSoundLooping(scrAudioGetID("BGMDracula")))
    {
        audio_loopmusic_volume(scrAudioGetID("BGMDracula"));
    }*/
}
else if(room == battleroom_bf)
{
    global.currentBGM = scrAudioGetID("BGM_BurningFasf");
    if(FMODInstanceGetPaused(scrAudioGetID("BGM_BurningFasf")))
    {
        audio_resumemusic_volume(scrAudioGetID("BGM_BurningFasf"));
    }
    else if(!FMODInstanceIsPlaying(scrAudioGetID("BGM_BurningFasf")))
    {
        audio_loopmusic_volume(scrAudioGetID("BGM_BurningFasf"));   
    }
    /*else if(!SS_IsSoundLooping(scrAudioGetID("BGM_BurningFasf")))
    {
        audio_loopmusic_volume(scrAudioGetID("BGM_BurningFasf"));
    }*/
}
else if(room == rDiamante)
{
    global.currentBGM = scrAudioGetID("BGM_Diamante");
}
else if(room == rPica)
{
    global.currentBGM = scrAudioGetID("BGM_Pica");
}
else if(room == rDragonStart)
{
    global.currentBGM = scrAudioGetID("BGM_Dragon");
}
else if(room == rTrebole)
{
    global.currentBGM = scrAudioGetID("BGM_Trebole");
}
else if(room == rCorazone)
{
    global.currentBGM = scrAudioGetID("BGM_Corazone");
}
else if(room == rTaisa)
{
    global.currentBGM = scrAudioGetID("BGM_Fapple");
}

global.playerHP = global.hp;
global.combatTime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.inCombat = false;
with(obj_combatPlayerKiller)
{
    instance_destroy();
}
global.monsters[global.combatIndex] = 1;
if(room != battleroom12 &amp;&amp; battleBGM)
{
sound_stop(battleBGM);
}
//SS_ResumeSound(global.stageMusic);
if(player_is_alive() &amp;&amp; player.x &gt; 0)
{
    if(global.GalleryBossFight &amp;&amp; global.GalleryBossFightNum &gt; 1 &amp;&amp; global.GalleryBossFightInd &lt; global.GalleryBossFightNum - 1)
    {
        //transition_kind = 21;
        //transition_steps = 100;
        global.GalleryBossFightInd += 1;
        global.combatObj = global.brObj[global.GalleryBossFightInd];
        global.mHP = global.brMHp[global.GalleryBossFightInd];
        global.defenseDamage = global.brBossDmg[global.GalleryBossFightInd];
        global.attackDamage = global.brHitDmg[global.GalleryBossFightInd];
        room_goto(global.GalleryBossFightRoom[global.GalleryBossFightInd]);
    }
    else
    {    
        if(global.GalleryBossFight &amp;&amp; global.GalleryBossFightNum &gt; 1)
        {
            global.GalleryBossFight = false;
            global.GalleryBossFightNum = 0;
            global.GalleryBossFightInd = 0;
            global.BR_Status = 1;
        }
        if(!global.isRandom)
        {
            //transition_kind = 21;
        }
        //global.currentBGM = global.pausedBGM;
        //if(SS_IsSoundPaused(global.currentBGM))
        //{
        //    audio_resumemusic_volume(global.currentBGM);
        //}
        room_goto(global.stageRoom);
        if(global.special[2])
        {
            global.expBonus += floor(global.mEx * 1.5);
        }
        else
        {
            global.expBonus += global.mEx;
        }
        player.x = global.roomX;
        player.y = global.roomY;
    }
    
    player.frozen = false;
    player.djump = true;
    bow.visible = true;
    bow.image_alpha = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.combatTime += 1;
if(!global.inGallery || (global.GalleryBossFight &amp;&amp; global.GalleryBossFightNum &gt; 1))
{
    if(global.special[18])
    {
        if(global.GalleryBossFight)
        {
            if(global.GalleryBossFightHp &lt; global.FullHp)
            {
                if(recoveryCountDown == 0)
                {
                    global.GalleryBossFightHp += 1;
                    recoveryCountDown = 100;
                }
                else
                {
                    recoveryCountDown -= 1;
                }
            }
        }
        else
        {
            if(global.hp &lt; global.FullHp)
            {
                if(recoveryCountDown == 0)
                {
                    global.hp += 1;
                    recoveryCountDown = 10;
                }
                else
                {
                    recoveryCountDown -= 1;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dontDraw)
    exit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Monster name info

draw_set_halign(fa_right);
draw_set_font(font12);
draw_set_color(c_silver);
draw_set_alpha(1);
if(!instance_exists(obj_monsterBattlePrototype))
{
    if(global.reverse == 0)
    {
        draw_text(view_xview[0] + view_wview[0] - 64, view_yview[0] + 64, "");
    }
    else if(view_angle[0] != 0)
    {
        draw_set_halign(fa_left);
        draw_text_transformed(view_xview[0] + 64, view_hview[0] - 64, "", 1, -1, 0);
    }
}
else
{
    if(global.reverse == 0)
    {
        draw_text(view_xview[0] + view_wview[0] - 64, view_yview[0] + 64, obj_monsterBattlePrototype.name);
    }
    else
    {
        draw_set_halign(fa_left);
        strWidth = string_width(obj_monsterBattlePrototype.name);
        draw_text_transformed(view_xview[0] + 64 + strWidth, view_hview[0] - 64, obj_monsterBattlePrototype.name, -1, -1, 0);
    }
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Kid info
draw_set_halign(fa_left)
if(global.reverse == 0)
{
    draw_text(view_xview[0] +64, view_yview[0] + 64, "Kid");
}
else
{
    draw_set_halign(fa_right);
    strWidth = string_width("Kid");
    draw_text_transformed(view_wview[0] - 64 - strWidth, view_hview[0] - 64, "Kid", -1, -1, 0);
}

if(global.GalleryBossFight)
{
    usedHp = global.GalleryBossFightHp;
}
else
{
    usedHp = global.hp;
}

if(player_is_alive() || instance_exists(player2))
{
    drawMagicHP();
    if(usedHp &lt; 233 &amp;&amp; !numOnly)
    {
        if(global.reverse == 0)
        {
            for(k = 0; k &lt; floor(usedHp / 100); k+=1)
            {
                draw_sprite_ext(spr_hp, 0, view_xview[0] +64 + 24 * k, view_yview[0] + 80+8, .75, .75, 0, c_white, 1);
            }
            
            for(j = 0; j &lt; floor((usedHp mod 100) / 10); j+=1)
            {
                draw_sprite(spr_heart10, 0, view_xview[0] +64 + floor(usedHp / 100) * 24 + 20 * j, view_yview[0] + 92+8);
            }
            
            for(i = 0; i &lt; (usedHp mod 10); i+= 1)
            {
                draw_sprite(spr_smallHeart, 0, view_xview[0] +64 + floor(usedHp / 100) * 24 + 20 * floor((usedHp mod 100) / 10) + 14 * i, view_yview[0] + 98+8);
            }
        }
        else
        {
            for(k = 0; k &lt; floor(usedHp / 100); k+=1)
            {
                draw_sprite_ext(spr_hp, 0, view_wview[0] - 64 - 24 * k, view_hview[0] - 80, -.75, -.75, 0, c_white, 1);
            }
            
            for(j = 0; j &lt; floor((usedHp mod 100) / 10); j+=1)
            {
                draw_sprite_ext(spr_heart10, 0, view_wview[0] -64 - floor(usedHp / 100) * 24 - 20 * j, view_hview[0] - 92, -1, -1, 0, c_white, 1);
            }
            
            for(i = 0; i &lt; (usedHp mod 10); i+= 1)
            {
                draw_sprite_ext(spr_smallHeart, 0, view_wview[0] -64 - floor(usedHp / 100) * 24 - 20 * floor((usedHp mod 100) / 10) - 14 * i, view_hview[0] - 98,-1,-1,0,c_white,1);
            }
        }
    }
    else
    {
        if(global.reverse == 0)
        {
            draw_sprite_ext(spr_smallHeart, 0, view_xview[0] +64, view_yview[0] + 92, .75, .75, 0, c_white, 1);
            draw_set_font(fontBasicInfoMini);
            draw_set_color(c_silver);
            draw_set_halign(fa_left);
            draw_set_valign(fa_middle);
            draw_text(view_xview[0] +78, view_yview[0] + 92, "x " + string(usedHp));
        }
        else
        { 
            draw_set_font(fontBasicInfoMini);
            draw_set_color(c_silver);
            draw_set_halign(fa_right);
            draw_set_valign(fa_middle);
            strWidth = string_width("x " + string(usedHp));
            draw_text_transformed(view_wview[0] -64 - strWidth - 14, view_hview[0] - 92, "x " + string(usedHp), -1, -1, 0);
            draw_sprite_ext(spr_smallHeart, 0, view_wview[0] - 64, view_hview[0] - 92, -.75, -.75, 0, c_white, 1);
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Monster HP info
if !instance_exists(obj_monsterBattlePrototype)
    exit;
if(dontDrawMonster) exit;
if(obj_monsterBattlePrototype.hp &lt; 233 &amp;&amp; !numOnly)
{
    if(global.reverse == 0)
    {
        for(k = 0; k &lt; floor(obj_monsterBattlePrototype.hp / 100); k+=1)
        {
            draw_sprite_ext(spr_hp, 0, view_xview[0] + view_wview[0] - 64 - 24 * (k + 1), view_yview[0] + 80, .75, .75, 0, c_white, 1);
        }
        
        for(j = 0; j &lt; floor((obj_monsterBattlePrototype.hp mod 100) / 10); j+=1)
        {
            draw_sprite(spr_heart10, 0, view_xview[0] + view_wview[0] - 64 - floor(obj_monsterBattlePrototype.hp / 100) * 24 - 20 * (j + 1), view_yview[0] + 92);
        }
        
        for(i = 0; i &lt; (obj_monsterBattlePrototype.hp mod 10); i+= 1)
        {
            draw_sprite(spr_smallHeart, 0, view_xview[0] + view_wview[0] - 64 - floor(obj_monsterBattlePrototype.hp / 100) * 24 - 20 * floor((obj_monsterBattlePrototype.hp mod 100) / 10) - 14 * (i + 1), view_yview[0] + 98);
        }
    }
    else
    {
        for(k = 0; k &lt; floor(obj_monsterBattlePrototype.hp / 100); k+=1)
        {
            draw_sprite_ext(spr_hp, 0, view_xview[0] + 64 + 24 * (k + 1), view_hview[0] - 80, -.75, -.75, 0, c_white, 1);
        }
        
        for(j = 0; j &lt; floor((obj_monsterBattlePrototype.hp mod 100) / 10); j+=1)
        {
            draw_sprite_ext(spr_heart10, 0, view_xview[0] + 64 + floor(obj_monsterBattlePrototype.hp / 100) * 24 + 20 * (j + 1), view_hview[0] - 92, -1, -1, 0, c_white, 1);
        }
        
        for(i = 0; i &lt; (obj_monsterBattlePrototype.hp mod 10); i+= 1)
        {
            draw_sprite_ext(spr_smallHeart, 0, view_xview[0] + 64 + floor(obj_monsterBattlePrototype.hp / 100) * 24 + 20 * floor((obj_monsterBattlePrototype.hp mod 100) / 10) + 14 * (i + 1), view_hview[0] - 98,-1,-1,0,c_white,1);
        }
    }
}
else
{
    if(global.reverse == 0)
    {
        draw_set_font(fontBasicInfoMini);
        draw_set_color(c_silver);
        draw_set_halign(fa_right);
        draw_set_valign(fa_middle);
        strWidth = string_width("x " + string(obj_monsterBattlePrototype.hp));
        draw_text(view_xview[0] + view_wview[0] - 64, view_yview[0] + 92, "x " + string(obj_monsterBattlePrototype.hp));
        draw_sprite_ext(spr_smallHeart, 0, view_xview[0] + view_wview[0] - 64 - strWidth - 14, view_yview[0] + 92, .75, .75, 0, c_white, 1);
    }
    else
    {
        draw_set_font(fontBasicInfoMini);
        draw_set_color(c_silver);
        draw_set_halign(fa_left);
        draw_set_valign(fa_middle);
        draw_text_transformed(view_xview[0] + 78, view_hview[0] - 92, "x " + string(obj_monsterBattlePrototype.hp),-1,-1,0);
        draw_sprite_ext(spr_smallHeart, 0, view_xview[0] + 64, view_hview[0] - 92, -.75, -.75, 0, c_white, 1);
    }
}


draw_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
