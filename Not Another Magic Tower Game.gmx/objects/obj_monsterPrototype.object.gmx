<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ind = 0;
sample = false;
onCollide = false;
status = 0;
ex = 0;

isBoss = false;

mybattleroom = battleroom;

alarm[11] = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 1/8;
/*if(global.monsters[ind] &amp;&amp; !global.inGallery &amp;&amp; !sample)
{
    instance_destroy();
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ADDED: initialize common variables

phase = 0;
status = 0;
time = 0;
dir = 0;
dis = 0;
targetX = 0;
targetY = 0;
spd = 0;
hspd = 0;
vspd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy
if(global.monsters[ind] &amp;&amp; !global.inGallery &amp;&amp; !sample)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.combatObj = combatObj;
global.combatHp = global.hp;
global.mHP = hp;
global.mAtk = atk;
global.mDef = def;
if(global.inGallery)
{
    global.mEx = 0;
    global.roomX = global.galleryX;
    global.roomY = global.galleryY;
}
else
{
    global.mEx = ex;
    global.roomX = player.x;
    global.roomY = player.y;
}
global.stageRoom = room;

//global.stageMusic = global.currentBGM;
sound_stop_all();
//FMODInstanceSetPaused(global.currentBGM, true);
FMODInstanceSetPaused(global.curMusic, true);

if(isBoss || object_index == obj_demonLead)
{
    sound_fix(sndgras);
    //transition_kind = 104;
    if(object_index == obj_faShiLiu)
    {
        //transition_steps = 60;
        //transition_kind = 21;
    }
    else
    {     
        //transition_kind = 104;
    }
}
else
{
    if(object_index == obj_silverEvilSlime || object_index == obj_goldEvilSlime)
    {
        //transition_steps = 150;
        //transition_kind = 104;
    }
    else
    {
        //transition_steps = 50;
        //transition_kind = choose(101,102,103);
    }
}
if(global.special[6])
{
    global.Blockable = true;
}
else
{
    global.Blockable = false;
}
room_goto(mybattleroom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.monsters[ind])
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.attack &lt;= def)
{
    status = 2;
}
else
{
    if(global.defense &gt;= atk)
    {
        status = 0;
    }
    else
    {
        status = 1;
    }
}

if(!place_meeting(x,y,obj_dynamiteInUse))
{
    image_blend = c_white;   
}
else
{
    image_blend = merge_color(c_white, c_red, 0.7);
    obj_dynamiteInUse.target = id; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    instance_destroy();
}
if(status == 0)
    {
        global.monsters[ind] = 1;
        global.TotalKills += 1;
        sound_fix(sndDeath);
        if(global.special[2])
        {
            global.expBonus += floor(ex * 1.5);
        }
        else
        {
            global.expBonus += ex;
        }
        obj_basicInfoDrawer.alarm[0] = 1;
        if(!global.achievements[8])
        {
            global.achievements[8] = true;
            ch = instance_create(0,608,obj_achievements);
            ch.index = 8;
        }
        instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!onCollide)
{
    onCollide = true;
    if(status == 0)
    {
        global.monsters[ind] = 1;
        global.TotalKills += 1;
        sound_fix(sndDeath);
        if(global.special[2])
        {
            global.expBonus += floor(ex * 1.5);
        }
        else
        {
            global.expBonus += ex;
        }
        obj_basicInfoDrawer.alarm[0] = 1;
        instance_destroy();
    }
    else if(status == 1)
    {
        if(global.skipMonsters)
        {
            global.monsters[ind] = 1;
            global.TotalKills += 1;
            sound_fix(sndDeath);
            if(global.special[2])
            {
                global.expBonus += floor(ex * 1.5);
            }
            else
            {
                global.expBonus += ex;
            }
            obj_basicInfoDrawer.alarm[0] = 1;
            instance_destroy()
        }
        else
        {
            global.inCombat = true;
            global.combatIndex = ind;
            global.attackDamage = global.attack - def;
            global.defenseDamage = atk - global.defense;
            if(global.MagicCloak)
            {
                global.MagicHP = global.TotalKills;
            }
            global.FullHp = global.hp;
            alarm[0] = 1;
        } 
    }
    else if(status == 2)
    {
        with(player)
        {
            killPlayer();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_current();
if(status == 0)
{
    draw_set_color(c_green);
}
else if(status == 1)
{
    draw_set_color(c_yellow);
}
else
{
    draw_set_color(c_red);
}
draw_roundrect(x+ 28 * (sprite_width / 32),y, x + sprite_width,y + 4 * (sprite_height / 32),false);


draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
