<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>title = "???";
stageIndex = -1;
alpha = 1;
time = 0;
backalpha = 1;
alarm[2] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(backalpha &gt; 0)
{
    backalpha -= 0.05;
    alarm[2] = 1;
}
else
{
    alarm[1] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(backalpha &lt; 1)
{
    backalpha += 0.05;
    alarm[1] = 1;
}
else
{
    alarm[2] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(alpha &lt; 1)
{
    alpha += 0.02;
    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time += 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_backspace) &amp;&amp; player_is_alive())
{
    //transition_kind = 21;
    //transition_steps = 100;
    player.x = 704 + 17;
    player.y = 96 + 23;
    room_goto(r10F);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font40);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_white);

draw_set_alpha(1);
draw_text(96,40,"ECHOSHIFT")
draw_set_alpha(alpha);
draw_text(96, 88, title);
draw_set_font(font12);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

if(stageIndex == -1)
{    
    spr = sprTvLoading;
    sprIndex = floor(time / 5) mod 4;
    draw_sprite_ext(sprTvLoading, floor(time / 5) mod 4, 96, 224,1,1,0,c_white,alpha);
    draw_text(8, 336, "Stage Best:");
    draw_text(16,388, "???");
    draw_text(8,464, "Stage Diff:");
    draw_text(8,496, "???");
    //draw_text(8,512, "Personal Best:");
    //draw_text(8,544, "???");
}
else if(stageIndex == 0)
{
    spr = sprTvLoading;
    sprIndex = floor(time / 5) mod 4;
    draw_sprite_ext(sprTvLoading, floor(time / 5) mod 4, 96, 224,1,1,0,c_white,alpha);
    draw_set_font(font12);
    draw_text(8, 336, "Stage Best:");
    draw_set_font(font24);
    draw_text(16,388, "N/A");
    draw_set_font(font12);
    draw_text(8,464, "Stage Diff:");
    draw_set_font(font24);
    draw_text(8,496, "N/A");
}
else
{
    spr = sprJKStageInfo;
    sprIndex = stageIndex - 1;
    draw_sprite_ext(sprJKStageInfo, stageIndex - 1, 96, 224,1,1,0,c_white,alpha);
    draw_text(8, 336, "Stage Best:");

    draw_text(8,464, "Stage Diff:");
    for(i = 0; i &lt; levelDiff; i+=1)
    {
        draw_sprite_ext(sprDiffStar, 0,  8 + 24 * i, 496,1,1,0,c_white,alpha);
    }
    baseline = 496;
    starIndex = 1;
    draw_set_font(font6);
    draw_set_valign(fa_middle);
    for(i=0;i&lt;1;i+=1)
    {
        draw_sprite_ext(sprStarButton,starIndex,12 + 14 * i, baseline, 1,1,0,c_white,alpha);
    }
    draw_text(52, baseline, ":");
    for(i = 0; i &lt; levelDiff1; i+=1)
    {
        draw_sprite_ext(sprDiffStar1, floor((levelDiff1 - 1) / 3),  68 + 12 * i, baseline,0.6,0.6,0,c_white,alpha);
    }
    baseline += 16;
    for(i=0;i&lt;2;i+=1)
    {
        draw_sprite_ext(sprStarButton,starIndex,12 + 14 * i, baseline, 1,1,0,c_white,alpha);
    }
    draw_text(52, baseline, ":");
    for(i = 0; i &lt; levelDiff2; i+=1)
    {
        draw_sprite_ext(sprDiffStar1, floor((levelDiff2 - 1) / 3),  68 + 12 * i, baseline,0.6,0.6,0,c_white,alpha);
    }
    baseline += 16;
    for(i=0;i&lt;3;i+=1)
    {
        draw_sprite_ext(sprStarButton,starIndex,12 + 14 * i, baseline, 1,1,0,c_white,alpha);
    }
    draw_text(52, baseline, ":");
    for(i = 0; i &lt; levelDiff3; i+=1)
    {
        draw_sprite_ext(sprDiffStar1, floor((levelDiff3 - 1) / 3),  68 + 12 * i, baseline,0.6,0.6,0,c_white,alpha);
    }
    draw_sprite_ext(sprDiffStar1, 0,  8 + 6, baseline + 24,0.8,0.8,0,c_white,alpha);
    draw_sprite_ext(sprDiffStar1, 1,  8 + 42 * 1 + 6, baseline + 24,0.8,0.8,0,c_white,alpha);
    draw_sprite_ext(sprDiffStar1, 2,  8 + 42 * 2 + 6, baseline + 24,0.8,0.8,0,c_white,alpha);
    draw_sprite_ext(sprDiffStar1, 3,  8 + 42 * 3 + 6, baseline + 24,0.8,0.8,0,c_white,alpha);
    draw_set_halign(fa_left);
    draw_text(24, baseline + 24, " - E");
    draw_text(24 + 42 * 1, baseline + 24, "- N");
    draw_text(24 + 42 * 2, baseline + 24, "- H");
    draw_text(24 + 42 * 3, baseline + 24, "- VH");
    //draw_text(8,512, "Personal Best:");
    if(global.ExtraJkBest[stageIndex - 1] &gt; 0)
    {
        for(i = 0; i &lt; 7; i += 1)
        {
            if(i &lt; global.ExtraJkBest[stageIndex - 1])
            {
                draw_sprite_ext(sprPlayerIdle, 0,  8 + 24 * i + 17 * 0.6 + 3, 380, 0.6, 0.6, 0, c_white, alpha);
            }
            else if(alpha &gt; 0.5)
            {
                draw_sprite_ext(sprPlayerIdle, 0,  8 + 24 * i + 17 * 0.6 + 3, 380, 0.6, 0.6, 0, c_gray, 0.5);
            }
        }
        draw_set_color(c_green);
        draw_line_width(8, 396, 8 + 24 * star3, 396, 3);
        draw_set_color(c_yellow);
        draw_line_width(8 + 24 * star3, 396, 8 + 24 * star2, 396, 3);
        draw_set_color(c_red);
        draw_line_width(8 + 24 * star2, 396, 8 + 24 * star1, 396, 3);
        draw_set_color(c_white);
        baseline1 = 404;
        baseline = 408;
        starIndex = 0;
        if(global.ExtraJkBest[stageIndex - 1] &lt;= star3)
        {
            starIndex = 1;
        }
        draw_line(8,baseline1, 8 + 24 * star3, baseline1);
        draw_line(8 + 24 * star3, baseline1, 8 + 24 * star3, 396);
        for(i=0;i&lt;3;i+=1)
        {
            draw_sprite_ext(sprStarButton,starIndex,12 + 14 * i, baseline + 4, 1,1,0,c_white,alpha);
        }
        if(global.ExtraJkBest[stageIndex - 1] &lt;= star2)
        {
            starIndex = 1;
        }
        baseline1 += 16;
        baseline += 16;
        draw_line(8,baseline1, 8 + 24 * star2, baseline1);
        draw_line(8 + 24 * star2, baseline1, 8 + 24 * star2, 396);
        for(i=0;i&lt;2;i+=1)
        {
            draw_sprite_ext(sprStarButton,starIndex,12 + 14 * i, baseline + 4, 1,1,0,c_white,alpha);
        }
        if(global.ExtraJkBest[stageIndex - 1] &lt;= star1)
        {
            starIndex = 1;
        }
        baseline1 += 16;
        baseline += 16;
        draw_line(8,baseline1, 8 + 24 * star1, baseline1);
        draw_line(8 + 24 * star1, baseline1, 8 + 24 * star1, 396);
        for(i=0;i&lt;1;i+=1)
        {
            draw_sprite_ext(sprStarButton,starIndex,12 + 14 * i, baseline + 4, 1,1,0,c_white,alpha);
        }
        //for(i = 0; i &lt; global.ExtraJkBest[stageIndex - 1]; i+=1)
        //{
        //    draw_sprite_ext(sprPlayerIdle, 0,  8 + 24 * i + 17 * 0.6 + 3, 556,0.6,0.6,0,c_white,alpha);
        //}
    }
    else
    {
        draw_set_font(font12);
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        draw_text(16,388, "???");
    }
}
draw_set_font(fontBasicInfoMini);
draw_set_color(c_silver);
draw_set_alpha(backalpha);
draw_set_halign(fa_center);
draw_set_valign(fa_bottom);
draw_text(96,592, "Press Backspace to Return");



draw_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
