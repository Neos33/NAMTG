<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!player_is_alive())
    exit;
obj_osuController.currentInd += 1;
if(correct)
{
    if(obj_osuController.mode == 0) //osu
    {
        judge = instance_create(x,y,obj_osuStandardCorrect);
        if(acc == 300)
        {
            judge.sprite_index = spr_osuStandard300;
        }
        else if(acc == 100)
        {
            judge.sprite_index = spr_osuStandard100; 
        }
        with(obj_osuController)
        {
            event_user(1);
        }
        sound_fix(sndOsuHitNormal);
    }
    else if(obj_osuController.mode == 1) //taiko
    {
        judge = instance_create(obj_taikoBoard.x,obj_taikoBoard.y,obj_taikoDrumHit);
        if(acc == 300)
        {
            judge.sprite_index = spr_perfect;
        }
        else
        {
            judge.sprite_index = spr_good;
        }
        result = instance_create(x,y,obj_taikoNoteHit);
        result.sprite_index = sprite_index;
        obj_osuController.currentTaikoIndex += 1;
    }
    else if(obj_osuController.mode == 2) //ctb
    {
        sound_fix(sndOsuHitNormal);
    }
    ammount = acc / 50;
    if(obj_osuController.hp &lt;= 100 - ammount)
    {
        obj_osuController.hp += ammount;
    }
    else
    {
        obj_osuController.hp = 100;
    }
    obj_osuController.combo += 1;
    with(obj_osuComboBurst)
    {
        scale = bScale;
    }
}
else
{
    if(obj_osuController.mode == 0) // osu
    {
        instance_create(x,y,obj_osuFault);
        with(obj_osuController)
        {
            event_user(1);
        }
    }
    else if(obj_osuController.mode == 1) //taiko
    {
         judge = instance_create(obj_taikoBoard.x,obj_taikoBoard.y,obj_taikoDrumHit);
         judge.sprite_index = spr_miss1;
         obj_osuController.currentTaikoIndex += 1;
    }
    else if(obj_osuController.mode == 2) //ctb
    {
        //
    }
    if(obj_osuController.hp &gt;= 10)
    {
        obj_osuController.hp -= 10;
    }
    else
    {
        obj_osuController.hp = 0;
        //obj_osuController.start = false;
    }
    obj_osuController.combo = 0;
    sound_fix(sndOsuComboBreak);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(abs(offset) &lt;= 10)
{
    acc = 300;
}
else if(abs(offset) &lt;= 20)
{
    acc = 100;
}
else
{
    acc = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
