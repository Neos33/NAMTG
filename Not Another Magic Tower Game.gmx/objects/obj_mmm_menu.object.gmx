<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mmm_menu2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000005</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>FMODInstanceStop(global.BGM_MMMFingers);
step = 0;
alpha = 0;
width = 13;
height = 13;
image_speed = 0;
currentMeter = obj_mmm_gameController.currentMeter;
if(currentMeter &lt; 250)
{
    dColor = c_black;
}
else if(currentMeter &gt;= 250 &amp;&amp; currentMeter &lt; 500)
{
    dColor = c_black;
}
else if(currentMeter &gt;= 500 &amp;&amp; currentMeter &lt; 750)
{
    dColor = c_black;
}
else if(currentMeter &gt;= 575000 &amp;&amp; currentMeter &lt; 1000)
{
    dColor = c_black;
}
else if(currentMeter &gt;= 1000)
{
    dColor = c_black;
    if(!global.achievements[61])
    {
        ch = instance_create(0,608,obj_achievements);
        ch.index = 61;
        global.achievements[61] = 1;
    }
}
alarm[0] = 1;
alarm[11] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_mmm_soundControl)
{
    event_user(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>step = 2;
medals = 0;
for(i = 0; i &lt; 4; i+=1)
{
    medals += global.mmmMedals[i];
}

if(medals &gt;= 30)
{
    if(!global.achievements[60])
    {
        ch = instance_create(0,608,obj_achievements);
        ch.index = 60;
        global.achievements[60] = 1;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(alpha &lt; 0.3)
{
    alpha += 0.02;
    alarm[0] = 1;
}
else
{
    step = 1;
    alarm[1] = 40;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(step &lt; 2)
  exit;
if(mouse_x &gt;= (x - width / 2 * 32) &amp;&amp; mouse_x &lt; (x + width / 2 * 32) &amp;&amp;
   mouse_y &gt;= (y - height / 2 * 32) &amp;&amp; mouse_y &lt; (y + height / 2 * 32))
{
    if(currentMeter &gt;= 250)
    {
       if(mouse_y &lt; y + 12)
       {
            selectedIndex = 0;
       }
       else if(mouse_y &gt; y + 100)
       {
            selectedIndex = 2;
       }
       else
       {
            selectedIndex = 1;
       }
    }
    else
    {
       if(mouse_y &lt; y + 12)
       {
            selectedIndex = 0;
       }
       else if(mouse_y &gt; y + 100)
       {
            selectedIndex = 2;
       }
    }
}

if(mouse_check_button_pressed(mb_left))
{
    if(mouse_x &gt; x - 208 &amp;&amp; mouse_x &lt; x + 208 &amp;&amp; mouse_y &gt; y - 208 &amp;&amp; mouse_y &lt; y + 208)
    {
        if(selectedIndex == 0)
        {
            with(obj_mmm_gameController)
            {
                event_user(0);
            }
            with(obj_mmm_soundControl)
            {
                event_user(0);
            }
            with(obj_mmm_monster_prototype)
            {
                instance_destroy();
            }
            with(obj_mmm_barrier_prototype)
            {
                instance_destroy();
            }
            with(obj_mmm_pathPoint)
            {
                instance_destroy();
            }
            audio_playsound(snd_touhou_1UP);
            global.mmmTotalTries += 1;
            instance_create(400,512,obj_mmm_player);
            instance_destroy();
        }
        else if(selectedIndex == 1)
        {
            if(currentMeter &gt;= 1200)
            {
                instance_create(32 + 17, 544 + 23, player);
            }
            else if(currentMeter &gt;= 1000)
            {
                instance_create(32 + 17, 480 + 23, player);
            }
            else if(currentMeter &gt;= 750)
            {
                instance_create(32 + 17, 384 + 23, player);
            }
            else if(currentMeter &gt;= 500)
            {
                instance_create(32 + 17, 240 + 23, player);
            }
            else if(currentMeter &gt;= 250)
            {
                instance_create(32 + 17, 96 + 23, player);
            }
            //transition_kind = 21;
            //transition_steps = 80;
            room_goto(rMMMBonus);
        }
        else if(selectedIndex == 2)
        {
            instance_create(256 + 17, 96 + 23, player);
            //transition_steps = 50;
            //transition_kind = 21;
            room_goto(r10F);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(alpha);
draw_set_color(c_black);
draw_rectangle(0,0,800,608, false);
if(step &lt; 1)
  exit;

draw_set_alpha(1);
draw_sprite(sprite_index,0, x - width / 2 * 32, y - height / 2 * 32);
for(i = 1; i &lt; width - 1; i += 1)
{
    draw_sprite(sprite_index,1, x - (width / 2 - i) * 32, y - height / 2 * 32);
}
draw_sprite(sprite_index,2, x + (width / 2 - 1) * 32, y - height / 2 * 32);

for(i = 1; i &lt; height - 1; i += 1)
{
    draw_sprite(sprite_index,3, x - width / 2 * 32, y - (height / 2 - i) * 32);
    for(j = 1; j &lt; width - 1; j += 1)
    {
        draw_sprite(sprite_index,4, x - (width / 2 - j) * 32,  y - (height / 2 - i) * 32);
    }
    draw_sprite(sprite_index,5, x + (width / 2 - 1) * 32, y - (height / 2 - i) * 32);
}

draw_sprite(sprite_index,6, x - width / 2 * 32, y + (height / 2 - 1) * 32);
for(i = 1; i &lt; width - 1; i += 1)
{
    draw_sprite(sprite_index,7, x - (width / 2 - i) * 32, y + (height / 2 - 1) * 32);
}
draw_sprite(sprite_index,8, x + (width / 2 - 1) * 32, y + (height / 2 - 1) * 32);

if(step &lt; 2)
   exit;
   
draw_sprite(spr_mmm_retry, 0, x -64, y - 56);
if(currentMeter &gt;= 250)
{
    draw_sprite(spr_mmm_bonus, 0, x -64, y + 32);
}
else
{
    draw_sprite_ext(spr_mmm_bonus, 0, x -64, y + 32, 1, 1, 0, c_gray, 0.5);
}
draw_sprite(spr_mmm_exit, 0, x -64, y + 120);

draw_sprite(spr_mmm_arrow, 0, x - 160, y - 48 + 88 * selectedIndex);

if(currentMeter &gt; 250)
{
    draw_sprite(spr_mmm_medal, RangeClamp(floor(currentMeter / 250 - 1), 0, 3), x + 144, y - 144);
    if(!medalEffect)
    {
        medalEffect = true;
    }
}

draw_set_font(fontMMM2);
draw_set_color(dColor);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text(x, y - 144, string(currentMeter));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
