<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_fix(sndStatistic);
alpha=0;
global.amount[3]=0;
for(i = 0; i &lt; 18; i+=1)
{
    if(i &lt; 11 || i &gt; 13)
    {
        global.amount[3] += 1000 * global.special[i];
    }
}

spr[0] = spr_floorTran;
spr[1] = spr_fairyLetter;
spr[2] = spr_expCoin;
spr[3] = spr_secretDetector;
spr[4] = spr_metalShoes;
spr[5] = spr_lostMemo;
spr[6] = spr_saintWand;
spr[7] = spr_magicRing;
spr[8] = spr_kuiHuaBaoDian;
spr[9] = spr_frozenBadge;
spr[10] = spr_strangeMap;
spr[11] = spr_magicCloak1;
spr[12] = spr_enegyAplifier1;
spr[13]= spr_saintSword1;
spr[14] = spr_saintShield1;

sprUnknown = spr_specialUnknown;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha+=0.01;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fontST);
draw_set_color(c_orange);
draw_set_halign(fa_left);
draw_set_circle_precision(64);
draw_set_alpha(alpha);

xOffset = -8;
yOffset = -16;
xGap = 40;
yGap = 40;
for(i = 0; i &lt; 18; i += 1)
{
    if(i &lt; 11)
    {
        if(global.special[i])
        {
            draw_sprite_ext(spr[i], 0, x + xOffset + xGap * (i mod 5), y + yOffset + yGap * floor(i / 5), 0.8,0.8,0,c_white,alpha);
        }
        else
        {
            draw_sprite_ext(sprUnknown, 0, x + xOffset + xGap * (i mod 5), y + yOffset + yGap * floor(i / 5), 0.8,0.8,0,c_gray,alpha);    
        }
    }
    else if(i &gt; 13)
    {
        if(global.special[i])
        {
            draw_sprite_ext(spr[i-3], 0, x + xOffset + xGap * ((i-3) mod 5), y + yOffset + yGap * floor((i-3) / 5), 0.8,0.8,0,c_white,alpha);
        }
        else
        {
            draw_sprite_ext(sprUnknown, 0, x + xOffset + xGap * ((i-3) mod 5), y + yOffset + yGap * floor((i-3) / 5), 0.8,0.8,0,c_gray,alpha);    
        }
    }
}

/*for(i = 0; i &lt; 2; i+=1)
{
    if(global.special[i + 8])
    {
        draw_sprite_ext(spr[i + 8], 0, x + xOffset + xGap * (i + 1), y + yOffset + yGap * 2, 1,1,0,c_white,alpha);
    }
    else
    {
        draw_sprite_ext(sprUnknown, 0, x + xOffset + xGap * (i + 1), y + yOffset + yGap * 2, 1,1,0,c_gray,alpha);
    }
}*/
draw_text(x + 16,y+120," * 1000 = "+string(global.amount[3]));
draw_circle(x+80,y+50,110,2);



draw_reset_color();
draw_set_circle_precision(24);


/*draw_text(x+48,y+32*0," * 1000 ="+string(1000*global.special[0]));
draw_text(x+48,y+32*1," * 1000 ="+string(1000*global.special[1]));
draw_text(x+48,y+32*2," * 1000 ="+string(1000*global.special[2]));
draw_text(x+48,y+32*3," * 1000 ="+string(1000*global.special[3]));
//draw_text(x+48,y+32*4," * 1000 ="+1000*string(global.redKeyNum));
draw_sprite_ext( spr_floorTran,0,x+16,y-16,1,1,0,c_white,alpha);
draw_sprite_ext( spr_fairyLetter,0,x+16,y+16,1,1,0,c_white,alpha);
draw_sprite_ext( spr_expCoin,0,x+16,y+16*3,1,1,0,c_white,alpha);
draw_sprite_ext( spr_secretDetector ,0,x+16,y+16*5,1,1,0,c_white,alpha);
//draw_sprite( spr_ironKey,0,x+16,y+16*7);





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
