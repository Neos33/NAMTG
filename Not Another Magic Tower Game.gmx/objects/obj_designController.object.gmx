<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gridSize = 16;
selectedIndex = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!checkMouse(view_xview[0] - global.dashboardWidth + global.menuPos, view_yview[0], view_xview[0] + 16 + global.menuPos, view_yview[0] + 608) &amp;&amp; !obj_soundProgressControl.checked &amp;&amp; !obj_soundPauseResume.checked)
{
    if(checkMouse(view_xview[0] + global.menuPos + 16, view_yview[0], view_xview[0] + 800, view_yview[0] + 608))
    {
        isDraw = true;
        if(mouse_check_button_released(mb_left))
        {
            isDraw = false;
            objx = floor(mouse_x / gridSize) * gridSize;
            objy = floor(mouse_y / gridSize) * gridSize;
            instance_create(objx, objy, global.currentObj);
        }
    }
}
else
{
 isDraw = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_tab))
{
    with(obj_designDashboardElementPrototye)
    {
     selected = false;
    }
    index = obj_designController.selectedIndex;
    if(index &lt; (ds_list_size(obj_designDashboard.itemList) - 1))
    {
        index += 1;
        obj_designController.selectedIndex += 1;
        with(ds_list_find_value(obj_designDashboard.itemList, obj_designController.selectedIndex))
        {
            selected = true;
            global.currentObj = obj;
            global.currentSpr = spr;
        }
    }
    else
    {
        index = 0; 
        obj_designController.selectedIndex = 0;
        with(ds_list_find_value(obj_designDashboard.itemList, obj_designController.selectedIndex))
        {
            selected = true;
            global.currentObj = obj;
            global.currentSpr = spr;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(gridOn)
{
    draw_set_color(c_silver);
    draw_set_alpha(1);
    for(i = (floor(view_xview[0] / gridSize) * gridSize); i &lt;= view_xview[0] + 800;  i += gridSize)
    {
        draw_line(i, 0, i, 608);
    }
    for(i = (floor(view_yview[0] / gridSize) * gridSize); i &lt;= view_yview[0] + 608;  i += gridSize)
    {
        draw_line(view_xview[0], i, view_xview[0] + 800, i);
    }
}

if(isDraw)
{
 draw_sprite_ext(global.currentSpr, 0, floor(mouse_x / gridSize) * gridSize, floor(mouse_y / gridSize) * gridSize, 1, 1, 0, global.img_blend, 0.6);
}


draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="71">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(gridOn)
{
    gridOn = false;
}
else
{
    gridOn = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = get_integer("Provide grid size", gridSize);
gridSize = size;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
