<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_mmm_barrier_prototype</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>record = obj_mmm_gameController.currentMeter;
vspeed = global.levelSpeed;
radius = 175;
gap = 70;

if(record &lt; 400)
{
    level = 1;
    moveSpd = 4;
}
else if(record &gt;= 400 &amp;&amp; record &lt; 700)
{
    level = 2;
    moveSpd = 5.5;
}
else if(record &gt;= 700)
{
    level = 3;
    moveSpd = 7;
}

moveSpd *= choose(-1,1);

for(var i = 0; i &lt; 4; i+=1)
{
    p[i] = instance_create(x + ((i mod 2) - 0.5) * gap, y + (floor(i / 2) - 0.5) * gap, obj_mmm_monster1);
}

for(var i = 0; i &lt; 10; i+=1)
{
    d1[i] = instance_create(x - radius * sign(moveSpd) + i * gap / 2 * sign(moveSpd), y - radius, obj_mmm_pathPoint);
    d1[i].hspeed = moveSpd;
    d2[i] = instance_create(x + radius, y - radius * sign(moveSpd) + i * gap / 2 * sign(moveSpd), obj_mmm_pathPoint);
    d2[i].vspeed = moveSpd + global.levelSpeed;
    d3[i] = instance_create(x + radius * sign(moveSpd) - i * gap / 2 * sign(moveSpd), y + radius, obj_mmm_pathPoint);
    d3[i].hspeed = -moveSpd;
    d4[i] = instance_create(x - radius, y + radius * sign(moveSpd) - i * gap / 2 * sign(moveSpd), obj_mmm_pathPoint);
    d4[i].vspeed = -moveSpd + global.levelSpeed ;
}

for(var i = 0; i &lt; level; i+=1)
{
    p1[i] = instance_create(x - radius * sign(moveSpd) + i * gap * sign(moveSpd), y - radius, obj_mmm_monster1);
    p1[i].hspeed = moveSpd;
    p2[i] = instance_create(x + radius, y - radius * sign(moveSpd) + i * gap * sign(moveSpd), obj_mmm_monster1);
    p2[i].vspeed = moveSpd + global.levelSpeed;
    p3[i] = instance_create(x + radius * sign(moveSpd) - i * gap * sign(moveSpd), y + radius, obj_mmm_monster1);
    p3[i].hspeed = -moveSpd;
    p4[i] = instance_create(x - radius, y + radius * sign(moveSpd) - i * gap * sign(moveSpd), obj_mmm_monster1);
    p4[i].vspeed = -moveSpd + global.levelSpeed;
}


/*

ooo     o
        o
   oo   o
o  oo
o
o     ooo
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i = 0; i &lt; 4; i+=1)
{
    with(p[i])
    {
        instance_destroy();
    }
}
for(i = 0; i &lt; 10; i+=1)
{
    with(d1[i]) {instance_destroy()};
    with(d2[i]) {instance_destroy()};
    with(d3[i]) {instance_destroy()};
    with(d4[i]) {instance_destroy()};
}
for(i = 0; i &lt; level; i+=1)
{
    with(p1[i]) {instance_destroy()}
    with(p2[i]) {instance_destroy()}
    with(p3[i]) {instance_destroy()}
    with(p4[i]) {instance_destroy()}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i = 0; i&lt;10;i+=1)
{
    if(i &lt; level)
    {
        p1[i].y = y - radius;
        p3[i].y = y + radius;
        
        if(p1[i].x &gt; x + radius)
        {
            p1[i].x -= 2 * radius;
        }
        else if(p1[i].x &lt; x - radius)
        {
            p1[i].x += 2 * radius;
        }
        
        if(p2[i].y &gt; y + radius)
        {
            p2[i].y -= 2 * radius;
        }
        else if(p2[i].y &lt; y - radius)
        {
            p2[i].y += 2 * radius;
        }
        
        if(p3[i].x &gt; x + radius)
        {
            p3[i].x -= 2 * radius;
        }
        else if(p3[i].x &lt; x - radius)
        {
            p3[i].x += 2 * radius;
        }
        
        if(p4[i].y &gt; y + radius)
        {
            p4[i].y -= 2 * radius;
        }
        else if(p4[i].y &lt; y - radius)
        {
            p4[i].y += 2 * radius;
        }
    }
    d1[i].y = y - radius;
    d3[i].y = y + radius;
    if(d1[i].x &gt; x + radius)
    {
        d1[i].x -= 2 * radius;
    }
    else if(d1[i].x &lt; x - radius)
    {
        d1[i].x += 2 * radius;
    }
    
    if(d2[i].y &gt; y + radius)
    {
        d2[i].y -= 2 * radius;
    }
    else if(d2[i].y &lt; y - radius)
    {
        d2[i].y += 2 * radius;
    }
    
    if(d3[i].x &gt; x + radius)
    {
        d3[i].x -= 2 * radius;
    }
    else if(d3[i].x &lt; x - radius)
    {
        d3[i].x += 2 * radius;
    }
    
    if(d4[i].y &gt; y + radius)
    {
        d4[i].y -= 2 * radius;
    }
    else if(d4[i].y &lt; y - radius)
    {
        d4[i].y += 2 * radius;
    }
}

for(i = 0; i &lt; 4; i += 1)
{
    p[i].y = y + (floor(i / 2) - 0.5) * gap;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(y &gt; 1200)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
