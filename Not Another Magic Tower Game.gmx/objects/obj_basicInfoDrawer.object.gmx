<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

a_bns[1] = 0;
d_bns[1] = 0;
h_bns[1] = 3;
global.levelRequired[0] = 30;

a_bns[2] = 0;
d_bns[2] = 2;
h_bns[2] = 5;
global.levelRequired[1] = 100;

a_bns[3] = 2;
d_bns[3] = 0;
h_bns[3] = 9;
global.levelRequired[2] = 250;

a_bns[4] = 2;
d_bns[4] = 2;
h_bns[4] = 15;
global.levelRequired[3] = 500;

k1_bns[5] = 1;
k2_bns[5] = 1;
k3_bns[5] = 1;
global.levelRequired[4] = 800;

k4_bns[6] = 1;
global.levelRequired[5] = 1250;

h_bns[7] = 100;
global.levelRequired[6] = 1800;

d_bns[8] = 10;
global.levelRequired[7] = 2500;

a_bns[9] = 10;
global.levelRequired[8] = 3500;

k1_bns[10] = 1;
k2_bns[10] = 1;
k3_bns[10] = 1;
k4_bns[10] = 1;
k5_bns[10] = 1;
k5_bns[10] = 1;
global.levelRequired[9] = 4500;

a_bns[11] = 3;
d_bns[11] = 3;
h_bns[11] = 300;
global.levelRequired[10] = 5700;

global.levelRequired[11] = 99999;

startX = 64; 
startY = 64;
currentExp = global.playerExp;
levelExp = global.levelExp;
levelRequired = global.levelRequired[global.currentLevel];
isSound = false;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>special = false;
debug = false;

baseInfoX = 0;
baseInfoY = 0;

amount = 0;
finalAmount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_stop(sndExpGet);
currentExp = global.playerExp;
levelExp = global.levelExp;
levelRequired = global.levelRequired[global.currentLevel];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>        global.currentLevel += 1;
        levelRequired = global.levelRequired[global.currentLevel];
        levelExp = 0;
        global.levelExp = 0;
        alarm[0] = 30;
        
        if(h_bns[global.currentLevel] &gt; 0)
        {
            ef = instance_create(132, 128 + 8 + 48 * 1, obj_lvupEffect);
            ef.num = h_bns[global.currentLevel];
        }
        if(a_bns[global.currentLevel] &gt; 0)
        {
            ef = instance_create(132, 128 + 8 + 48 * 2, obj_lvupEffect);
            ef.num = a_bns[global.currentLevel];
        }
        if(d_bns[global.currentLevel] &gt; 0)
        {
            ef = instance_create(132, 128 + 8 + 48 * 3, obj_lvupEffect);
            ef.num = d_bns[global.currentLevel];
        }
        if(k1_bns[global.currentLevel] &gt; 0)
        {
            ef = instance_create(132, 128 + 8 + 48 * 4, obj_lvupEffect);
            ef.num = k1_bns[global.currentLevel];
        }
        if(k2_bns[global.currentLevel] &gt; 0)
        {
            ef = instance_create(132, 128 + 8 + 48 * 5, obj_lvupEffect);
            ef.num = k2_bns[global.currentLevel];
        }
        if(k3_bns[global.currentLevel] &gt; 0)
        {
            ef = instance_create(132, 128 + 8 + 48 * 6, obj_lvupEffect);
            ef.num = k3_bns[global.currentLevel];
        }
        if(k4_bns[global.currentLevel] &gt; 0)
        {
            ef = instance_create(132, 128 + 8 + 48 * 7, obj_lvupEffect);
            ef.num = k4_bns[global.currentLevel];
        }
        if(k5_bns[global.currentLevel] &gt; 0)
        {
            ef = instance_create(132, 128 + 8 + 48 * 8, obj_lvupEffect);
            ef.num = k5_bns[global.currentLevel];
        }
        levelupBonus(a_bns[global.currentLevel], d_bns[global.currentLevel], h_bns[global.currentLevel], k1_bns[global.currentLevel], k2_bns[global.currentLevel], k3_bns[global.currentLevel], k4_bns[global.currentLevel], k5_bns[global.currentLevel]);
        

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.expBonus &gt; 0)
{   
    if(!special)
    {
        if(!isSound || !sound_isplaying(sndExpGet)) {
            sound_stop(sndExpGet);
            sound_fix(sndExpGet);
            isSound = true;
            if(global.expBonus &gt; levelRequired)
            {
                amount = ceil(levelRequired / 40);
            }
            else
            {
                amount = ceil(global.expBonus / 40);
            }
        }
        if(amount &gt; global.expBonus) {
            amount = global.expBonus;
        }
        if(amount &gt; (levelRequired - levelExp))
        {
            finalAmount = levelRequired - levelExp;
        }
        else
        {
            finalAmount = amount;
        }
        global.expBonus -= finalAmount;
        global.playerExp += finalAmount;
        currentExp += finalAmount;
        global.levelExp += finalAmount;
        levelExp += finalAmount;
        if(levelExp == levelRequired) {
            instance_create(142,161,obj_levelupFlash);
            sound_stop(sndExpGet);
            sound_fix(sndExpMax);
            isSound = false;
            alarm[1] = 15;
        }
        else
        {
            alarm[0] = 2;
        }
    }
    else {
        if((global.levelExp + global.expBonus) &gt;= global.levelRequired[global.currentLevel])
        {
            global.levelExp += global.expBonus - global.levelRequired[global.currentLevel];            
            global.currentLevel += 1;      
            levelRequired = global.levelRequired[global.currentLevel];
            levelupBonus(a_bns[global.currentLevel], d_bns[global.currentLevel], h_bns[global.currentLevel], k1_bns[global.currentLevel], k2_bns[global.currentLevel], k3_bns[global.currentLevel], k4_bns[global.currentLevel], k5_bns[global.currentLevel]);     
        }
        else
        {
            global.levelExp += global.expBonus;
        }
        levelExp = global.levelExp;
        global.playerExp += global.expBonus;
        global.expBonus = 0;
    }
}
else {
    isSound = false;
    sound_stop(sndExpGet);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!special)
{
    if(debug)
    {
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_set_font(font12);
    draw_sprite(spr_yellowKey,0,startX, startY);
    draw_text(startX + 48, startY + 16, global.yellowKeyNum);
    
    draw_sprite(spr_blueKey,0,startX + 96 * 1, startY);
    draw_text(startX + 96 * 1 + 48, startY + 16, global.blueKeyNum);
    
    draw_sprite(spr_redKey,0,startX + 96 * 2, startY);
    draw_text(startX + 96 * 2 + 48, startY + 16, global.redKeyNum);
    
    draw_sprite(spr_greenKey,0,startX + 96 * 3, startY);
    draw_text(startX + 96 * 3 + 48, startY + 16, global.greenKeyNum);
    
    draw_sprite(spr_ironKey,0,startX + 96 * 4, startY);
    draw_text(startX + 96 * 4 + 48, startY + 16, global.ironKeyNum);
    
    draw_sprite(spr_attUp1, 0, startX, startY + 64);
    draw_text(startX + 48, startY + 64 + 16, global.attack);
    
    draw_sprite(spr_defUp1, 0, startX + 96 * 1, startY + 64);
    draw_text(startX + 96 * 1 + 48, startY + 64 + 16, global.defense);
    
    draw_sprite(spr_hpUp1, 0, startX + 96 * 2, startY + 64);
    draw_text(startX + 96 * 2 + 48, startY + 64 + 16, global.hp);
    }
    else if(!special)
    {
        if instance_exists(player)
        {
            draw_sprite(player.sprite_index, player.image_index, 48 + 17, 48 + 23);
        }
        draw_set_alpha(1);
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        draw_set_color(c_silver);
        draw_set_font(fontBasicInfo);
        draw_text(128, 48 + 12, "F");
        baseInfoX = 48;
        baseInfoY = 128;
        if(global.currentLevel == 11)
        {
            draw_text(baseInfoX, baseInfoY, "Level MAX");
        }
        else
        {
            draw_text(baseInfoX, baseInfoY, "Level");
        }
        draw_text(baseInfoX, baseInfoY + 8 + 48 * 1, "HP");
        draw_text(baseInfoX, baseInfoY + 8 + 48 * 2, "Atk");
        draw_text(baseInfoX, baseInfoY + 8 + 48 * 3, "Def");
        
        draw_sprite(spr_yellowKey, 0,baseInfoX, baseInfoY + 200);
        draw_sprite(spr_blueKey, 0,baseInfoX, baseInfoY + 200 + 48 * 1);
        draw_sprite(spr_redKey, 0,baseInfoX, baseInfoY + 200 + 48 * 2);
        draw_sprite(spr_greenKey, 0,baseInfoX, baseInfoY + 200 + 48 * 3);
        draw_sprite(spr_ironKey, 0,baseInfoX, baseInfoY + 200 + 48 * 4);
        
        draw_set_color(c_white);
        draw_set_halign(fa_right);
        draw_text(112, 48 + 12, global.currentFloor);
        
        if(global.currentLevel != 11)
        {
            draw_text(132, baseInfoY, global.currentLevel);
        }
        draw_sprite(spr_progressbarBg_Small, 0, baseInfoX - 2, baseInfoY + 24 + 4);
        draw_sprite_part(spr_progressbar_Small,0,0,0, levelExp / levelRequired * 96,10,baseInfoX - 2,baseInfoY + 24 + 4); 
        draw_text(132, baseInfoY + 8 + 48 * 1, global.hp);
        draw_text(132, baseInfoY + 8 + 48 * 2, global.attack);
        draw_text(132, baseInfoY + 8 + 48 * 3, global.defense);
        
        draw_text(132, baseInfoY + 200 + 48 * 0, global.yellowKeyNum);
        draw_text(132, baseInfoY + 200 + 48 * 1, global.blueKeyNum);
        draw_text(132, baseInfoY + 200 + 48 * 2, global.redKeyNum);
        draw_text(132, baseInfoY + 200 + 48 * 3, global.greenKeyNum);
        draw_text(132, baseInfoY + 200 + 48 * 4, global.ironKeyNum);
        
        draw_set_font(fontExp);
        draw_set_valign(fa_middle);
        draw_set_color(c_silver);
        draw_text(baseInfoX - 2 + 96 - 2,baseInfoY + 24 + 4 + 5, string(levelExp) + "/" + string(levelRequired));
    }
}

draw_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
