<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time = 0;
explodeAmmount1 = 0;
explodeSpd1 = 0;
explodeAmmount2 = 0;
explodeSpd2 = 0;
f1 = 0;
f2 = 0;
p = 0;

tempSign = 0;
p1 = 0;
blackOut = 0;

startX = 0;
startY = 0;
b = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Room list
instance_create(0,0,obj_tlBlinkBlack);
currentStep = 0;
explodeSpd1 = 6;
explodeSpd2 = 7;
explodeAmmount1 = 36;
explodeAmmount2 = 25;
alarm[11] = 1;

rngRoomList = ds_list_create();
ds_list_add(rngRoomList,r_tl_dracula);
ds_list_add(rngRoomList,r_tl_giantBat);
ds_list_add(rngRoomList,r_tl_skeletonOrc);
ds_list_add(rngRoomList,r_tl_redKnight);
ds_list_add(rngRoomList,r_tl_swordMaster);
ds_list_add(rngRoomList,r_tl_blackDevilMagician);
ds_list_add(rngRoomList,r_tl_burningSlime);
ds_list_add(rngRoomList,r_tl_burningKnight);
ds_list_add(rngRoomList,r_tl_burningFasf);
ds_list_add(rngRoomList,r_tl_armoredSoldier);
ds_list_add(rngRoomList,r_tl_silverEvilSlime);
ds_list_add(rngRoomList,r_tl_goldEvilSlime);
ds_list_shuffle(rngRoomList);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Steps
step[0] = 1;    //Start Bullet
step[1] = 245;  //explode1
step[2] = 340; //explode2_1
step[3] = 350; //explode2_2
step[4] = 370; //explode2_3
step[5] = 470; //explode3_1
step[6] = 480; //explode3_2
step[7] = 500; //explode3_3
step[8] = 600; //explode4_1
step[9] = 610; //explode4_2
step[10] = 630; //explode4_3
step[11] = 750; //fireball
step[12] = 1150; //burst beam
step[13] = 1198; //white flash1
step[14] = 1207; //white flash2
step[15] = 1216; //white flash3
step[16] = 1125; //white flash4
step[17] = 1240; //destroy start part, init fire
step[18] = 1244; //battle start
step[19] = 1750; //fasf in
step[20] = 2020; //fasf up
step[21] = 2230; //dark hole
step[22] = 2370;  //view
step[23] = 2430;  //fade out
step[24] = 2480;  //change room
step[25] = 2500;  //small slime in
step[26] = 2600;  //red slime in
step[27] = 2700;  //black slime in
step[28] = 2800;  //slime king in
step[29] = 3010;  //skeleton in
step[30] = 3080;  //throw big bone
step[31] = 3330;  //bone gather
step[32] = 3480;  //intermediate guard in
step[33] = 3750;  //junior guard in
step[34] = 3980;  //mages + stone in
step[35] = 4105;  //megicians + steel in
step[36] = 4240;  //diao slime + veriation skeleton in
step[37] = 4500;  //yelow knight in
step[38] = 4600;  //orc mage in
step[39] = 4730;  //blue knight in
step[40] = 4820;  //orc swordsman in
step[41] = 4920;  //orc warrior in
step[42] = 5080;  //red bat in
step[43] = 5170;  //bat in
step[44] = 5220;  //small bat in
step[45] = 5437;  //white flash5
step[46] = 5446;  //white flash6
step[47] = 5455;  //white flash7
step[48] = 5464;  //white flash8
step[49] = 5500;  //random monster1
step[50] = 5750;  //random monster2
step[51] = 6000;  //random_monster3
step[52] = 6250;  //random monster4
step[53] = 6500;  //change to original room
step[54] = 7000;  //change to touhou ready room
step[55] = 7500;  //touhou start

if(global.part == 1)
{
    time = 2459;
    currentStep = 24;
}
else if(global.part == 2)
{
    time = 5400;
    currentStep = 45;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Particle
ps = part_system_create();
part_system_depth(ps,-50)

part1 = part_type_create();   //StartFire
part_type_shape(part1,pt_shape_line);
part_type_size(part1,1.50,2,0,0);
part_type_scale(part1,0.65,2.50);
part_type_color3(part1,16749459,33023,255);
part_type_alpha3(part1,0.04,0.06,0.07);
part_type_speed(part1,0.70,2.60,-0.02,0);
part_type_direction(part1,0,359,0,9);
part_type_gravity(part1,0,270);
part_type_orientation(part1,0,0,10,20,1);
part_type_blend(part1,1);
part_type_life(part1,40,50);

beam = part_type_create();
part_type_blend(beam,1);
part_type_color1(beam,make_color_rgb(255,128,64));
part_type_sprite(beam,sprBeam,0,0,0);
//sprite_set_alpha_from_sprite(sprBeam,sprBeam);
part_type_orientation(beam,0,360,0,0,0);
part_type_size(beam,0,0,0.5,1);

pt1_em1 = part_emitter_create(ps);
pt1_em2 = part_emitter_create(ps);
beam_em1 = part_emitter_create(ps);
beam_em2 = part_emitter_create(ps);


ps1 = part_system_create();
part_system_depth(ps1,-60)

partBGFire = part_type_create(); 

part_type_sprite(partBGFire,spr_particle_fire,0,0,1);
part_type_size(partBGFire,2,3,-.01,0);
part_type_orientation(partBGFire,0,360,2,0,0);
part_type_color3(partBGFire,c_orange,c_orange,c_red);
part_type_alpha3(partBGFire,.05,0.2,0);
part_type_blend(partBGFire,1);

part_type_direction(partBGFire,85,95,0,0);
part_type_speed(partBGFire,5,15,0,0);

part_type_life(partBGFire,25,35);

partBubble = part_type_create();
part_type_shape(partBubble,pt_shape_circle);
part_type_size(partBubble,0.10,0.30,0,0);
part_type_scale(partBubble,1,1);
part_type_color2(partBubble,make_color_rgb(107,87,173), c_white);//16777215,12632256);
part_type_alpha2(partBubble,1,0);
part_type_speed(partBubble,1,2,0.01,0);
part_type_direction(partBubble,80,100,0,0);
part_type_gravity(partBubble,0,270);
part_type_orientation(partBubble,0,0,0,0,1);
part_type_blend(partBubble,1);
part_type_life(partBubble,70,100);
bubbleEmitter = part_emitter_create(ps);
part_emitter_region(ps,bubbleEmitter,0,800,600,608,0,0);

bgFireEmitter1 = part_emitter_create(ps1);
part_emitter_region(ps1,bgFireEmitter1,-32,128,448,608,ps_shape_rectangle,ps_distr_linear);

bgFireEmitter2 = part_emitter_create(ps1);
part_emitter_region(ps1,bgFireEmitter2,672,832,448,608,ps_shape_rectangle,ps_distr_linear);

bgFireEmitter3 = part_emitter_create(ps1);
part_emitter_region(ps1,bgFireEmitter3,96,704,608,608,ps_shape_rectangle,ps_distr_linear);


/*bgFireDestroyer = part_destroyer_create(ps1);
part_destroyer_region(ps1, bgFireDestroyer, 96, 704, 0, 512, ps_shape_rectangle);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(part1);
part_type_destroy(partBGFire);
part_type_destroy(partBubble);
part_emitter_destroy(ps,pt1_em1);
part_emitter_destroy(ps,pt1_em2);
part_emitter_destroy(ps,beam_em1);
part_emitter_destroy(ps,beam_em2);
part_emitter_destroy(ps1,bgFireEmitter1);
part_emitter_destroy(ps1,bgFireEmitter2);
part_emitter_destroy(ps1,bgFireEmitter3);
part_emitter_destroy(ps,bubbleEmitter);
//part_destroyer_destroy(ps1,bgFireDestroyer);
part_system_destroy(ps);
part_system_destroy(ps1);


ds_list_destroy(rngRoomList);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SS_StopAll();
sound_stop_all();
audio_playmusic_volume(scrAudioGetID("BGM_DemonLead"));
//global.currentBGM = global.BGM_DemonLead;
global.currentBGM = scrAudioGetID("BGM_DemonLead")
//global.curMusic = scrAudioGetID("BGM_DemonLead");
if(global.part == 1)
{
    FMODInstanceSetPosition(scrAudioGetID("BGM_DemonLead"), 8666536); //to monster room
}
else if(global.part == 2)
{
    room_goto(rDemonLeadMonsters);
    FMODInstanceSetPosition(scrAudioGetID("BGM_DemonLead"), 19038852);
}
else if(global.part == 3)
{
    room_goto(rDemonLeadTouhou);
    FMODInstanceSetPosition(scrAudioGetID("BGM_DemonLead"), 24708352);
    currentStep = 54;
}
else if(global.part == 4)
{
    room_goto(rDemonLeadFinalPhase);
    FMODInstanceSetPosition(scrAudioGetID("BGM_DemonLead"), 33533648);
    currentStep = 54;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
alarm[0] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(player)) exit;
time += 1;
if(currentStep == 54)
{
    if(!obj_tlOriginalTrigger.triggered)
    {
        exit;
    }
}
if(time &gt;= step[currentStep])
{
    switch(currentStep)
    {
        case 0: alarm[0] = 1;break; //start bullets
        case 1: //explode1
             for(i=0;i&lt;explodeAmmount1;i+=1)
             {
                b = instance_create(obj_demonLead_combat.x, obj_demonLead_combat.y, obj_tlDanmaku2);
                b.speed = explodeSpd1;
                b.ind = 1;
                b.direction = i*360/explodeAmmount1;
             }
             break;
        case 2: //explode2_1
            for(i=0;i&lt;explodeAmmount2;i+=1)
             {
                b = instance_create(obj_demonLead_combat.x, obj_demonLead_combat.y, obj_tlDanmaku2);
                b.speed = explodeSpd2;
                b.ind = 2;
                b.sind = 1;
                b.direction = i*360/explodeAmmount2;
                b.alarm[3] = 10;
             }
             break;
        case 3: //explode2_2
            for(i=0;i&lt;explodeAmmount2;i+=1)
             {
                b = instance_create(obj_demonLead_combat.x, obj_demonLead_combat.y, obj_tlDanmaku2);
                b.speed = explodeSpd2;
                b.ind = 2;
                b.sind = 2;
                b.direction = (i+0.5)*360/explodeAmmount2;
                b.alarm[3] = 10;
             }
             break;
        case 4: //explode2_3
            with(obj_tlDanmaku2)
            {
                if(ind == 2)
                {
                    speed = other.explodeSpd2;
                    direction = point_direction(x,y,obj_demonLead_combat.x,obj_demonLead_combat.y);
                    if(sind == 1)
                    {
                        alarm[5] = 1;
                    }
                    else
                    {
                        alarm[6] = 1;
                    }
                }
            }
            break;
        case 5: //explode3_1
            for(i=0;i&lt;explodeAmmount2;i+=1)
             {
                b = instance_create(obj_demonLead_combat.x, obj_demonLead_combat.y, obj_tlDanmaku2);
                b.speed = explodeSpd2;
                b.ind = 3;
                b.sind = 1;
                b.direction = i*360/explodeAmmount2;
                b.alarm[3] = 10;
                b.alarm[4] = 1;
             }
             break;
        case 6: //explode3_2
            for(i=0;i&lt;explodeAmmount2;i+=1)
             {
                b = instance_create(obj_demonLead_combat.x, obj_demonLead_combat.y, obj_tlDanmaku2);
                b.speed = explodeSpd2;
                b.ind = 3;
                b.sind = 2;
                b.direction = (i+0.5)*360/explodeAmmount2;
                b.alarm[3] = 10;
                b.alarm[4] = 1;
             }
             break;
        case 7: //explode3_3
            with(obj_tlDanmaku2)
            {
                if(ind == 3)
                {
                    if(sind == 1)
                    {
                        hspeed = -hspd;
                        vspeed = vspd;
                    }
                    else
                    {
                        hspeed = hspd;
                        vspeed = -vspd;                   
                    }
                }
            }
            break;
        case 8: //explode4_1
            for(i=0;i&lt;explodeAmmount2;i+=1)
             {
                b = instance_create(obj_demonLead_combat.x, obj_demonLead_combat.y, obj_tlDanmaku2);
                b.speed = explodeSpd2;
                b.ind = 4;
                b.sind = 1;
                b.direction = i*360/explodeAmmount2;
                b.alarm[3] = 10;
                b.alarm[4] = 1;
             }
             break;
        case 9: //explode4_2
            for(i=0;i&lt;explodeAmmount2;i+=1)
             {
                b = instance_create(obj_demonLead_combat.x, obj_demonLead_combat.y, obj_tlDanmaku2);
                b.speed = explodeSpd2;
                b.ind = 4;
                b.sind = 2;
                b.direction = i*360/explodeAmmount2;
                b.alarm[3] = 10;
                b.alarm[4] = 1;
             }
             break;
        case 10: //explode4_3
            with(obj_tlDanmaku2)
            {
                if(ind == 4)
                {
                    if(sind == 1)
                    {
                        hspeed = -hspd;
                        vspeed = vspd;
                    }
                    else
                    {
                        hspeed = hspd;
                        vspeed = -vspd;                   
                    }
                    direction += 90;
                }
            }
            break;
        case 11: //fireball
            alarm[0] = 0;
            instance_create(128,-32,obj_tlStartFireParticle);
            instance_create(672,-32,obj_tlStartFireParticle);
            with(obj_tlPlatform1)
            {
                alarm[0] = 1;
            }
            with(obj_tlPillar)
            {
                alarm[0] = 1;
            }
            obj_tlBlinkBlack.alarm[2] = 1;
            break;
        case 12: //burst beam
            obj_tlStartFireParticle.alarm[4] = 1;
            break;
        case 13: //white flash1
            instance_create(0,0,obj_tlWhiteBlink);
            with(obj_tlStartFireParticle)
            {
                alarm[3] = 0;
            }
            break;
        case 14: //white flash2
            instance_create(0,0,obj_tlWhiteBlink);
            break;
        case 15: //white flash3
            instance_create(0,0,obj_tlWhiteBlink);
            with(obj_tlStartFireParticle)
            {
                alarm[4] = 0;
            }
            break;
        case 16: //white flash4
            instance_create(0,0,obj_tlWhiteBlink);
            with(obj_tlPlatform1)
            {
                image_blend = make_color_rgb(255,96,0);
            }
            with(obj_tlPillar)
            {
                image_blend = make_color_rgb(255,96,0);
            }
            break;
        case 17:
            part_particles_clear(part1);
            part_particles_clear(beam);
            background_blend[0] = make_color_rgb(255,128,0);
            with(obj_tlBlinkBlack)
            {
                minAlpha = -0.1;
                maxAlpha = 0.3;
                //alarm[3] = 1;
                //alarm[0] = 0;
                //alarm[1] = 0;
            }
            with(obj_tlStartFireParticle)
            {
                instance_destroy();
            } 
            with(obj_tlWater1)
            {
                alarm[3] = 1;
            }
            instance_create(0,0,obj_tlBGFireController);
            break;
        case 18:
            instance_create(0,0,obj_tlBombController);
            break;
        case 19:
            with(obj_tlBombController)
            {
                instance_destroy();
            }
            f1 = instance_create(32,32,obj_tlSuperFasf);
            f1.ind = 1;
            f1.sprite_index = spr_dlFasf;
            f2 = instance_create(768,32,obj_tlSuperFasf);
            f2.ind = -1;
            break;
        case 20:
            with(obj_tlSuperFasf)
            {
                phase = 2;
                alarm[5] = 1;
            }
            break;
        case 21: 
            obj_demonLead_combat.alarm[3] = 1;
            instance_create(400,240,obj_tlStartDarkHole);
            audio_playmusic_volume(global.SE_HeedMyCall);
            break;
        case 22:
            instance_create(0,0,obj_tlWhiteBlink);
            instance_create(player.x, player.y, obj_tlAbsorbedKid);
            player.x = 400;
            player.y = 304;
            player.frozen = true;
            player.visible = false;
            bow.visible = false;
            break;
        case 23:
            p = instance_create(0,0,obj_tlBlackFadeOut);
            p.time = 50;
            break;
        case 24:
            room_goto(rDemonLeadMonsters);
            break;
        case 25:
            instance_create(592,272,obj_tlSmallSlime);
            break;
        case 26:
            instance_create(400,160,obj_tlRedSlime);
            break;
        case 27:
            p =instance_create(256,208,obj_tlBlackSlime);
            p.sound = true;
            instance_create(544,208,obj_tlBlackSlime); 
            break;
        case 28:
            instance_create(400,128,obj_tlSlimeKing);
            break;
        case 29:
            instance_create(400 + sign(400 - player.x)*192,368,obj_tlSkeleton);
            break;
        case 30:
            obj_tlSkeleton.alarm[4] = 1;
            break;
        case 31:
            obj_tlSkeletonSwordsman.start = true;
            with(obj_tlSkeletonSwordTrace)
            {
                status = 2;
                spd = point_distance(x,y,obj_tlSkeletonSwordsman.x,obj_tlSkeletonSwordsman.y)/80;
                if(spd &lt; 3)
                {
                    spd = 3;
                }
            }
            with(obj_tlSkeletonBone)
            {
                gravity = 0;
                bounce = false;
                tx = obj_tlSkeletonSwordsman.x;
                ty = obj_tlSkeletonSwordsman.y + 16;
                dis = point_distance(x,y,tx,ty);
                spd = dis/80;
                if(spd &lt; 3)
                {
                    spd = 3;
                }
                alarm[3] = 1;
            }
            obj_tlSkeletonSwordTrace.status = 2;
            break;
        case 32:
            with(instance_create(208,368,obj_tlGuardLv2))
            {
                blastX = 376;
                sound = true;
            }
            with(instance_create(592,368,obj_tlGuardLv2))
            {
                blastX = 424;
            }
            break;
        case 33:
            with(block)
            {
                if(sp == 1)
                {
                    image_yscale = 1;
                }
            }
            with(instance_create(224,368,obj_tlGuardLv1))
            {
                type = 0;
                alarm[7] = 50;
            }
            break;
        case 34:
            with(instance_create(192,512,obj_tlMage))
            {
                type = 0;
            }
            with(instance_create(608,512,obj_tlMage))
            {
                type = 1;
                sprite_index = spr_mage2Battle;
            }
            break;
        case 35:
            with(instance_create(220,128,obj_tlMagician))
            {
                type = 1;
            }
            with(instance_create(580,128,obj_tlMagician))
            {
                type = -1;
                sprite_index = spr_magician2Battle;
            }
            break;
        case 36:
            with(instance_create(224,368,obj_tlDiaoSlime))
            {
                ind = -1;
                image_xscale = -1;
                alarm[11] = 100;
            }
            with(instance_create(576,368,obj_tlDiaoSlime))
            {
                ind = 1;
            }
            break;
        case 37:
            tempSign = sign(400 - player.x);
            instance_create(400 + 192 * tempSign, 368, obj_tlYellowKnight);
            break;
        case 38:
            p1 = instance_create(400 - 192 * tempSign, 368, obj_tlOrcMage);
            break;
        case 39:
            p1 = instance_create(400 + 192 * tempSign, 368, obj_tlBlueKnight);
            p1.image_xscale = tempSign;
            break;
        case 40:
            instance_create(player.x - (32 - 18) * tempSign, player.y - 23 + 16 - 18, obj_tlOrcSwordsmanDashShadow);
            break;
        case 41:
            instance_create(400 - 192 * tempSign, 368, obj_tlOrcWarrior);
            break;
        case 42:
            instance_create(400, 128, obj_tlRedBat);
            break;
        case 43: 
            instance_create(400, 160, obj_tlBat);
            break;
        case 44:
            instance_create(400 + 192 * sign(400 - player.x), 192, obj_tlSmallBat);
            break;
        case 45: 
            instance_create(0,0,obj_tlWhiteBlink);
            break;
        case 46: 
            instance_create(0,0,obj_tlWhiteBlink);
            break;
        case 47: 
            instance_create(0,0,obj_tlWhiteBlink);
            break;
        case 48: 
            instance_create(0,0,obj_tlWhiteBlink);
            break;
        case 49:
            blackOut = instance_create(400,304,obj_tlRngBlackOut);
            blackOut.alarm[0] = 16;
            blackOut.roomTo = ds_list_find_value(rngRoomList,0);
            break;
        case 50:
            blackOut = instance_create(400,304,obj_tlRngBlackOut);
            blackOut.alarm[0] = 16;
            blackOut.roomTo = ds_list_find_value(rngRoomList,1);
            break;
        case 51:
            blackOut = instance_create(400,304,obj_tlRngBlackOut);
            blackOut.alarm[0] = 16;
            blackOut.roomTo = ds_list_find_value(rngRoomList,2);
            break;
        case 52:
            blackOut = instance_create(400,304,obj_tlRngBlackOut);
            blackOut.alarm[0] = 16;
            blackOut.roomTo = ds_list_find_value(rngRoomList,3);
            break;
        case 53:
            blackOut = instance_create(400,304,obj_tlRngBlackOut);
            blackOut.alarm[0] = 16;
            blackOut.roomTo = rDemonLeadOrininal;
            break;
        case 54:
            room_goto(rDemonLeadTouhou);
            break;
            
    }
    currentStep += 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(time == 5400)
{
    pos = SS_GetSoundPosition(global.BGM_DemonLead);
    SS_PauseSound(global.BGM_DemonLead);
    show_message(pos);
    audio_resumemusic_volume(global.BGM_DemonLead);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startX = random_range(16, 768);
startY = 0;
b = instance_create(startX, startY, obj_tlDanmaku1);
b.speed = random_range(2.5,4.5);
b.direction = 270 + random_range(-10,10);

/*(type = choose(-1,1);
startX = 400 + random_range(32,432) * type;
startY = 0;
b = instance_create(startX, startY, obj_tlDanmaku1);
b.speed = random_range(3.5,4.5);
b.direction = 270 - type * 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == rDemonLead || room == rDemonLeadOrininal)
{
    part_particles_clear(part1);
    part_particles_clear(beam);
    part_particles_clear(partBGFire);
    //sound_stop(sndHeedMyCall);
}
else if(room == rDemonLeadMonsters)
{
    part_particles_clear(partBubble);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
