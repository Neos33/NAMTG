<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_guardlv1_battle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_monsterBattlePrototype</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
name = "Junior Guard";
alarm[3] = 20;
image_speed = 1 / 8;
phase = "init";
alarm[11] = 1;

key = 0;
dir = 0;
djump = 0;

xoffset = 0;
yoffset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
with(obj_keyBoomerang)
{
    sound_stop(sndBoomerang);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y+=16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = "run";
sprite_index = spr_guardlv1_dash;
if(player.x &gt; x)
{
    hspeed = 15;
    image_xscale = -1;
}
else
{
    hspeed = -15;
    image_xscale = 1;
}
key.onHold = false;
key.onRun = true;
sound_fix(sndEarth2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key.onSmash = false;
key.onBoom = true;
image_angle = 0;
if(y &gt; 560)
{
    y = 560;
}
key.direction = point_direction(key.x, key.y, player.x, player.y);
key.speed = 30;
sound_loop(sndBoomerang);
alarm[10] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if !instance_exists(player)
    //exit;

if(player.x &gt; 400)
{
    x = player.x -350;
    image_angle = -45;
}
else
{
    image_angle = 45;
    x = player.x  + 350;
}
y = player.y - 350;
instance_create(x, y, obj_teleport);
sound_fix(sndTelAtk);
dir = point_direction(x,y,player.x,player.y);
key.onSmash = true;
key.smashEnd = false;
key.onHold = false;
hspeed = 15 * cos(degtorad(dir));
vspeed = -15 * sin(degtorad(dir));
phase = "smash";


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = -15;
phase = "jump";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if !instance_exists(player)
   // exit;
    
key.onHold = false;
key.onBoom = true;
key.onSmash = false;
key.onRun = false;
key.direction = point_direction(key.x, key.y, player.x, player.y);
key.speed = 30;
sound_loop(sndBoomerang);
alarm[5] = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!key)
{
    if(x &gt; player.x)
    {
        key = instance_create(x - 12, y - 2, obj_keyBoomerang);
    }
    else
    {
        key = instance_create(x + 12, y - 2, obj_keyBoomerang);
    }
}
key.onHold = true;
key.onBoom = false;
key.onSmash = false;
key.onRun = false;
//key.image_angle = -16;
alarm[4] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase: Jump
if(phase == "jump")
{
    if(vspeed &gt; 0)
    {
        gravity = 0;
        instance_create(x,y, obj_teleport);
        sound_fix(sndTeleport);
        x = -32; 
        y = -32;
        alarm[6] = 40;
        phase = "init";
    }
    else
    {
        vspeed += 0.8;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase: Smash
if(phase = "smash")
{
    if(abs(vspeed) &lt; 0.1)
    {
        vspeed = 0;
        hspeed = 0;
        instance_create(x,y, view_shaker1);
        sound_fix(sndEarth1);
        key.smashEnd = true;
        alarm[7] = 30;
        phase = "init";
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase: Run
if(phase = "run")
{
    if(abs(hspeed) &lt; 0.1)
    {
        if(x &gt; 400)
        {
            hspeed = -1.5;      
            x -= 5;              
        }
        else
        {
            hspeed = 1.5;
            x += 5;                             
        }
        vspeed = -4; 
        gravity = 0.1;
        key.onRun = false;
        key.onHold = true;
        sprite_index = spr_guardlv1_battle;
        instance_create(x,y, view_shaker1);
        phase = "final";
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase: Final
if(phase == "final")
{
    if(y &gt; 559 &amp;&amp; abs(vspeed &lt; 0.1))
    {
        sound_fix(sndEarth1);
        y = 560;
        hspeed = 0;
        vspeed = 0;
        gravity = 0;
        phase = "init";
        alarm[3] = 20;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//�ǂƂ̏Փ˔���

//�O��ɕǂ����鎞
if(place_free(x+hspeed,y) == false){
  if(hspeed &lt;= 0){//��
    move_contact_solid(180,abs(hspeed));
  }
  if(hspeed &gt; 0){//�E
    move_contact_solid(0,abs(hspeed));
  }
  hspeed = 0;
}

//�㉺�ɕǂ����鎞  
if(place_free(x,y+vspeed) == false){
  if(vspeed &lt;= 0){//��
    move_contact_solid(90,abs(vspeed));
  }
  if(vspeed &gt; 0){//��
    move_contact_solid(270,abs(vspeed));
    djump=1;
  }
  vspeed = 0;
  gravity=0
}

//�΂߂̈ʒu�ɕǂ����鎞
if (place_free(x+hspeed,y+vspeed) == false){
  hspeed=0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(abs(vspeed) &gt; 0.1)
{
    if(!global.achievements[32])
    {
        var ch = instance_create(0,608,obj_achievements);
        ch.index = 32;
        global.achievements[32] = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(abs(hspeed) &gt; 5)
{
    for(var i = 1; i &lt; 5; i+= 1)
    {
        xoffset = -10 * i * cos(degtorad(360 - direction));
        yoffset = -10 * i * sin(degtorad(360 - direction));
        draw_sprite_ext(sprite_index, image_index, x + xoffset,y + yoffset,1,1,image_angle,c_white,1 - 0.15 * i);
    }
}
draw_sprite_ext(sprite_index, image_index, x,y,1,1,image_angle,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
