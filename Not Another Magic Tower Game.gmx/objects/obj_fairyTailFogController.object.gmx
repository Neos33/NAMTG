<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i = 0; i &lt; 576; i += 4)
{
    instance_create(view_xview[0] + 208 + i, view_yview[0] + 204, obj_fairyTailFog);
    instance_create(view_xview[0] + 208 + i, view_yview[0] + 406, obj_fairyTailFog);
    instance_create(view_xview[0] + 396, view_yview[0] + 16 + i, obj_fairyTailFog);
    instance_create(view_xview[0] + 598, view_yview[0] + 16 + i, obj_fairyTailFog);
}

//surf = surface_create(800, 608);
surf = noone;
list = ds_list_create();
for(var i=0; i &lt; 9; i += 1)
{
    ds_list_add(list,i);
}
ds_list_shuffle(list);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (surface_exists(surf))
{
    surface_set_target(surf);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (surface_exists(surf)){
    surface_reset_target();
    for(j = 0; j &lt; 9; j += 1)
    {
        val = ds_list_find_value(list,j);
        draw_surface_general(surf, 195 + 202 * (val mod 3), 1 + 202 * floor(val / 3), 202, 202, 195 + 202 * (j mod 3), 1 + 202 * floor(j / 3), 1, 1, 0, c_white,c_white,c_white,c_white,1);
    }
    draw_surface_general(surf, 0,0,192,608, 0,0,1, 1, 0, c_white,c_white,c_white,c_white,1);
    //screen_refresh();
    
}
else{
    surf = surface_create(view_wview[0], view_hview[0]);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(surf))
{
    surface_free(surf);
}
ds_list_destroy(list);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (!surface_exists(surf)){
    surface_reset_target();
    for(j = 0; j &lt; 9; j += 1)
    {
        val = ds_list_find_value(list,j);
        draw_surface_general(surf, 195 + 202 * (val mod 3), 1 + 202 * floor(val / 3), 202, 202, 195 + 202 * (j mod 3), 1 + 202 * floor(j / 3), 1, 1, 0, c_white,c_white,c_white,c_white,1);
    }
    draw_surface_general(surf, 0,0,192,608, 0,0,1, 1, 0, c_white,c_white,c_white,c_white,1);
    //screen_refresh();
    
}
else{
    surf = surface_create(view_wview[0], view_hview[0]);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(surf))
{
    surf = surface_create(view_wview[0], view_hview[0]);
}


surface_set_target(surf);
for(j = 0; j &lt; 9; j += 1)
{
    var val = ds_list_find_value(list,j);
    draw_surface_general(application_surface, 
                        195 + 202 * (val mod 3), 
                        1 + 202 * floor(val / 3), 
                        202, 202, 
                        195 + 202 * (j mod 3), 1 + 202 * floor(j / 3), 
                        1, 1, 0, c_white,c_white,c_white,c_white,1);
}

surface_reset_target();
//draw_surface_general(surf, 0,0,192,608, 0,0,1, 1, 0, c_white,c_white,c_white,c_white,1);

draw_surface(surf, 0, 0);
//screen_refresh();
    


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
