<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grayPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>radius = 6;
thickness = 5;
startAngle = 90;
totalAngle = 360;
gapAngle = 5;
color = c_green;

stepAngle = 360/150;
totalSteps = 150;

size = 0.6;
alpha = 0.5;

image_speed = 1/8;

ds_queue_enqueue(obj_spaceController.queue, id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(alpha &gt; 0)
{
    alpha -= 0.02;
    size += 0.05;
}
else
{
    alpha = 0.6;
    size = 0.5;
}
if(totalAngle &gt; 0)
{
    startAngle -= stepAngle;
    totalAngle -= stepAngle;
    steps += 1;
    color = merge_color(c_green,c_red, steps/totalSteps);
}
else
{
    ds_queue_dequeue(obj_spaceController.queue);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(player)) exit;
repeat(6)
{
    hitEffect();
}
dir1 = point_direction(player.x,player.y,x,y);
dir2 = dir1 + 180;
dis = point_distance(player.x,player.y,x,y);
sx1 = player.x + lengthdir_x(8,dir1);
sy1 = player.y + lengthdir_y(8,dir1);
sx2 = x + lengthdir_x(8,dir2);
sy2 = y + lengthdir_y(8,dir2);
repeat(ceil(dis/16/2))
{
    with(instance_create(sx1,sy1,obj_spaceTeleportEffect))
    {
        image_angle = other.dir1 - 90;
    }
    with(instance_create(sx2,sy2,obj_spaceTeleportEffect))
    {
        image_angle = other.dir2 - 90;
    }  
    sx1 += lengthdir_x(16,dir1);
    sy1 += lengthdir_y(16,dir1);
    sx2 += lengthdir_x(16,dir2);
    sy2 += lengthdir_y(16,dir2);
}




if(player.vspeed != 0)
{
    with(player)
    {
        repeat(6)
        {
            hitEffect();
        }
        if(place_meeting(other.x, other.y - 1, block) &amp;&amp; vspeed &lt; 0)
        { 
            y = other.y + 1;   
            vspeed = 0;
        }
        else if(place_meeting(other.x, other.y + 1, block) &amp;&amp; vspeed &gt; 0)
        {
            y = other.y - 1;   
            vspeed = 0;
        }
        else
        {
            y = other.y - 1;
        }
        
    }
}
else
{
    player.y = y - 1;
}
player.x = x;
player.hspeed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
draw_sprite_ext(spr_grayPlayer,image_index,x,y,0.8,0.8,0,c_white,0.7);
draw_sprite_ext(spr_grayPlayer,image_index,x,y,size,size,0,c_white,alpha);
drawRing(x-2, y, radius,thickness,startAngle,totalAngle,gapAngle,color);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fontBasicInfoMini);
draw_text(x,y-20,string((150-steps)/50));


draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
