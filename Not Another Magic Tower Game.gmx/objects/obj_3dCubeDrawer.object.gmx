<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cubeWidth = 6;
maxNum = 6;
x = obj_3dController.rWidth / 2;
y = obj_3dController.rHeight / 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_transform_set_identity();
d3d_transform_set_rotation_x(90);

draw_set_color(make_color_rgb(255,215,0));
d3d_set_depth(50);
draw_set_alpha(0.5);
//draw_set_blend_mode(bm_add);
//offset = 0;
repeat(2)
{
    //scale = (6+offset)/6;
    num = irandom_range(0,maxNum);
    for(i = 0; i &lt; obj_3dController.rWidth; i+=cubeWidth)
    {
        tempNum = RangeClamp(num + irandom_range(-1,1),0,maxNum - irandom_range(0,4));
        num = tempNum;
        for(j = -num; j &lt; num; j += 1)
        {
            //draw_rectangle(i + 1, -obj_3dController.cStart + j * cubeWidth + 1, i + 5, -obj_3dController.cStart + j * cubeWidth + 5, false);
            //draw_sprite(spr_3dCubeGold, 0, i,-obj_3dController.cStart + j * cubeWidth);
            draw_sprite(spr_3dCubeGold, 0, i, j * cubeWidth);
            //draw_sprite_ext(spr_3dCubeGold,0,i - offset,j*cubeWidth - offset,scale,scale,0,c_white,1);
        }
    }
    //offset += 2;
}
//draw_set_blend_mode(bm_normal);
d3d_transform_set_identity();


draw_reset_color();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
