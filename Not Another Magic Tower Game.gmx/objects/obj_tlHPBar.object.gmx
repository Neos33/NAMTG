<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tlHPBar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width = sprite_get_width(sprite_index);
height = sprite_get_height(sprite_index);

sw = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phase == 0)
{
    if(sw &lt; width)
    {
        sw += 10;
    }
    else
    {
        sw = width;
        phase = 1;
    }
    repeat(2)
    {
        with(instance_create(x+width-sw,y+random_range(0,height),obj_hitEffect))
        {
            speed = random_range(5,7);
            direction = random_range(-5,5);
        }
    }
}
else if(phase == 2)
{
    if(sw &lt; width / 2)
    {
        sw += 10;
        repeat(2)
        {
            with(instance_create(x+sw,y+random_range(0,height),obj_hitEffect))
            {
                speed = random_range(5,7);
                direction = random_range(175,185);
            }
            with(instance_create(x+width-sw,y+random_range(0,height),obj_hitEffect))
            {
                speed = random_range(5,7);
                direction = random_range(-5,5);
            }
        }
    }
    else
    {
        sw = width / 2;
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(phase == 0)
{
    draw_sprite_part_ext(sprite_index, 1, width - sw, 0, sw, height, x + width - sw, y, 1, 1, c_white, 1);
}
else if(phase == 1)
{
    draw_set_color(c_silver);
    draw_set_font(fontBasicInfo);
    draw_set_halign(fa_left);
    draw_set_valign(fa_middle);
    draw_set_alpha(1);
    draw_text(75, 32, "The Tower Lead");
    draw_sprite(sprite_index,0,x,y);
    sw = obj_demonLead_combat.hp/6666*width;
    draw_sprite_part_ext(sprite_index, 1, 0, 0, sw, height, x, y, 1, 1, c_white, 1);
    
    draw_reset();
}
else if(phase == 2)
{
    draw_sprite_part_ext(sprite_index,0,sw,0,width-sw*2,height,x,y,1,1,c_white,1);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
