<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_skeletonKing</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_monsterBattlePrototype</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
name = "Skeleton King";
image_speed = 1/8;
image_xscale = 10;
image_yscale = 12;
x = 544;
y = 352;
shakeSize = 3;
gravity = 0.2;
alarm[5] = 50;

phase = 0;
isShake = 0;
jumpCount = 0;
targetX = 0;
targetY = 0;

boneNum = 0;
onPlatform = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[6] = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if instance_exists(player)

    if(player.x &lt; 400)
    {
        p = instance_create(920, 480, obj_hugeBone);
        p.hspeed = -1;
        p.dx = - 120;
    }
    else
    {
        p = instance_create(-120, 480, obj_hugeBone);
        p.hspeed = 1;
        p.dx = 920;
    }

isShake = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_xscale &gt; 1)
{
    image_xscale -= 1;
    image_yscale -= 1.2;
    alarm[7] = 1;
}
else
{
    gravity = 0;
    x = -100;
    y = -100;
    alarm[10] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isShake = false;
if(jumpCount &lt; 3)
{
    //if instance_exists(player)
    {
        phase = 2;
        targetX = player.x;
        targetY = 200;
        jumpCount += 1;
        alarm[4] = 1;
    }
}
else
{
    alarm[4] = 1;
    alarm[7] = 1;
    phase = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 1;
isShake = true;
shakeSize = 8;
gravity = 0;
alarm[3] = 5;
audio_playsound(sndRoar);
alarm[11] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isShake = false;
sound_stop(sndQuake);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_xview = random_range(-shakeSize, shakeSize);
view_yview = random_range(-shakeSize, shakeSize);
if(isShake) {
    alarm[3] = 1;
}
else
{
    view_xview = 0;
    view_yview = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phase == 1)
{  
    if(boneNum mod 3 == 0)
    {
        audio_playsound(snd_wallum);
        bone = instance_create(x, y - 50, obj_skeletonBone);
        bone.hspeed = -sign(image_xscale) * random_range(1,5);
        bone.vspeed = random_range(-8, 2);
    }
    boneNum += 1;
}
if(phase == 2)
{   
    //if instance_exists(player)
    {
        if(point_distance(x,y,targetX, targetY) &gt;= 15)
        {
            targetX = player.x;
            targetY = 200;
            onPlatform = false;
            move_towards_point(targetX, targetY, 15);
        }
        else
        {
            hspeed = 0;
            vspeed = 0;
            gravity = 0.2;
            phase = 3;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="demobock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(place_free(x+hspeed,y) == false){
  if(hspeed &lt;= 0){//��
    move_contact_solid(180,abs(hspeed));
  }
  if(hspeed &gt; 0){//�E
    move_contact_solid(0,abs(hspeed));
  }
  hspeed = 0;
}

if(place_free(x,y+vspeed) == false){
  if(vspeed &lt;= 0){//��
    move_contact_solid(90,abs(vspeed));
  }
  if(vspeed &gt; 0){//��
    move_contact_solid(270,abs(vspeed));
  }
  vspeed = 0;
  if(!onPlatform)
    {
    onPlatform = true;
    isShake = true;
    alarm[3] = 1;
    sound_fix(sndQuake);
    if(phase == 3)
    {
        alarm[6] = 50;
        repeat(3)
        {
            tt = instance_create(x + random_range(-32, 32), y + random_range(32, 96), obj_skeletonBone);
            tt.crotch = true;
        }
    }
    }
}

if (place_free(x+hspeed,y+vspeed) == false){
  hspeed=0;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
