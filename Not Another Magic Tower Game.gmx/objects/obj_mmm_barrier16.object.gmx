<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_mmm_barrier_prototype</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>record = obj_mmm_gameController.currentMeter;
radius = 150;
if(record &lt; 400)
{
    rotateSpd = 2;
}
else if(record &gt;= 400 &amp;&amp; record &lt; 750)
{
    rotateSpd = 2.5;
}
else if(record &gt;= 750 &amp;&amp; record &lt; 1000)
{
    rotateSpd = 3;
}
else if(record &gt;= 1000)
{
    rotateSpd = 3.5;
}

b[0] = instance_create(x + (radius + 120), y, obj_mmm_pathPoint);
b[1] = instance_create(x - (radius + 120), y, obj_mmm_pathPoint);
for(i = 0; i &lt; 2; i += 1)
{
    if(i == 1)
    {
        offset = 0.5;
    }
    else
    {
        offset = 0;
    }
    for(j = 0; j &lt; 8; j+=1)
    {
        px = b[i].x + radius * cos(degtorad((j + offset) * 45));
        py = b[i].y - radius * sin(degtorad((j + offset) * 45));
        p[i,j] = instance_create(px, py, obj_mmm_monster2);
        p[i,j].angle = j * 45;
        p[i,j].stepAngle = rotateSpd * sign(i-0.5);
    }
}


/*
  /      \
 o        o
 
  o-    -o
 
 o        o
  \      /
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i = 0; i &lt; 2; i += 1)
{
    with(b[i])
    {
        instance_destroy();
    }
    for(j = 0; j &lt; 8; j+=1)
    {
        with(p[i,j])
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = global.levelSpeed;

angle += rotateSpd;

for(i = 0; i &lt; 2; i += 1)
{
    b[i].y = y;
    if(i == 1)
    {
        offset = 0.5;
    }
    else
    {
        offset = 0;
    }
    for(j = 0; j &lt; 8; j+=1)
    {
        p[i,j].x = b[i].x + radius * cos(degtorad((j + offset) * 45 + angle * sign(i -0.5)));
        p[i,j].y = b[i].y - radius * sin(degtorad((j + offset) * 45 + angle * sign(i -0.5)));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(y &gt; 1200)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
