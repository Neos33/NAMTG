<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_yellowKnight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_monsterBattlePrototype</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
name = "Yellow Knight";
alarm[3] = 20;
phase = "";
image_speed = 1/8;


dCount = 0;
targetX = 0;
targetY = 0;
spd = 0;

centerX = 0;
centerY = 0;
num = 0;

isAch = 0;
angle = 0;
fAngle = 0;
mCount = 0;
mTime = 0;

hit = 0;
p_dis = 0;
p_dir = 0;
tx = 0;
ty = 0;


cPhase = 0;
cCount1 = 0;
cCount2 = 0;
cCount3 = 0;


backupPhase = 2;
cInterval = 50;
cTime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(cCount1 &lt; 10)
{
    with(combo1[cCount1])
    {
        speed = 15;
        direction = point_direction(x,y, player.x, player.y);
    }
    cCount1 += 1;
    alarm[10] = 10;
}
else
{
    cPhase = 4;
    backupPhase = 2;
    cInterval = 50;
    cTime = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = "combo";
x = 704;
y = 544;
mTime = 0;
mCount = 0;
cPhase = 1;
cCount1 = 0;
cCount2 = 0;
cCount3 = 0;
hit = instance_create(x + 2, y + 16, obj_swordhit);
hit.image_xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = instance_create(x + 2, y + 16, obj_swordhit);
hit.image_xscale = -1;
audio_playsound(sndSkill1);
p_dis = point_distance(x,y,400,304);
p_dir = point_direction(400,304,x,y);
tx = 400 + p_dis * 0.75 * cos(degtorad(p_dir));
ty = 304 - p_dis * 0.75 * sin(degtorad(p_dir));
with(obj_yellowKnightBullet1)
{
    speed = 8;
    direction = point_direction(x,y, other.tx, other.ty);
}
alarm[7]=30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>centerX = 400;
centerY = 304;
dCount = 0;
phase = "magic";
num = choose(5,7,9);
if(num == 9)
{
    isAch = true;
}
angle = 360 / num;
fAngle = -angle;
x = centerX + 150 * cos(degtorad(fAngle)) - 16;
y = centerY - 150 * sin(degtorad(fAngle)) - 16;
fAngle += 2 * angle;
mCount = 1;
mTime = 0;
targetX = centerX + 150 * cos(degtorad(fAngle)) - 16;
targetY = centerY - 150 * sin(degtorad(fAngle)) - 16;
spd = 24;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_playsound(sndSkill1);
alarm[5] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = "dash";
dCount += 1;
targetX = x - 200;
targetY = y;
spd = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase: Dash
if(phase == "dash")
{
    if(point_distance(x,y,targetX,targetY) &lt; spd)
    {
        hspeed = 0;
        vspeed = 0;
        sprite_index = spr_yellowKnight;
        hit = instance_create(x + 2, y + 16, obj_swordhit);
        hit.image_xscale = -1;
        phase = "init";
        if(dCount &lt; 3)
        {
            alarm[3] = 20;
        }
        else
        {
            alarm[4] = 20;
        }
    }
    else
    {
        move_towards_point(targetX, targetY, spd);
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase: Magic
if(phase == "magic")
{
    mTime +=1;
    if(mTime mod 2 == 0)
    {
        audio_playsound(sndShoot);
    }
    instance_create(x + 16,y + 16, obj_yellowKnightBullet1);        
    if(point_distance(x, y, targetX, targetY) &lt; spd)
    {
        hspeed = 0;
        vspeed = 0;
        if(mCount &lt; num)
        {
            mCount += 1;
            fAngle += 2* angle;
            targetX = centerX + 150 * cos(degtorad(fAngle)) - 16;
            targetY = centerY - 150 * sin(degtorad(fAngle)) - 16;
        }
        else
        {
            x = 400 - 16;
            y = 304 - 16;;
            phase = "init";
            alarm[6] = 10;
        }
    }
    else
    {
        move_towards_point(targetX, targetY, spd);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Phase: Combo
if(phase == "combo")
{
    if(cPhase == 1)
    {
        if(cCount1 &lt; 10)
        {
            audio_playsound(sndShoot);
            combo1[cCount1] = instance_create(x - 15, y - 20 + cCount1 * 4, obj_yellowKnightBullet1);
            cCount1 += 1;
        }
        else
        {
            cPhase = 0;
            cCount1 = 0;
            alarm[10] = 20;
        }
    }
    else if(cPhase == 2)
    {
        if(cCount2 &lt; 200)
        {
            if(cCount2 mod 2 == 0)
            {
                audio_playsound(sndShoot);
                c2_1 = instance_create(x - 15, y + 48 - 24 +  abs(5 - ((cCount2 / 2) mod 10)) * 8, obj_yellowKnightBullet2);
                c2_2 = instance_create(x - 15, y - 48 - 24 - abs(5 - ((cCount2 / 2) mod 10)) * 8, obj_yellowKnightBullet2);
                c2_1.hspeed = -8;
                c2_2.hspeed = -8;
            }
            cCount2 += 1;
        }
        else
        {
            cPhase = 4;
            backupPhase = 3;
            cInterval = 50;
            cTime = 0;
        }
    }
    else if(cPhase == 3)
    {
        if(cCount3 &lt; 200)
        {
            if(cCount2 mod 2 == 0)
            {
                audio_playsound(sndShoot);
                c3_1 = instance_create(x - 15, y + 24, obj_yellowKnightBullet3);
                c3_2 = instance_create(x - 15, y - 24, obj_yellowKnightBullet3);
                c3_1.type = 0;
                c3_2.type = 1;
                c3_1.vspeed = -5.25;
                c3_2.vspeed = 5.25;
                c3_1.hspeed = -5;
                c3_2.hspeed = -5;
            }           
        }
        else if(cCount3 == 250)
        {
            alarm[3] = 1;
        }
        cCount3 += 1;
    }
    else if(cPhase == 4)
    {
        if(cTime &lt; cInterval)
        {
            cTime += 1;
        }       
        else
        {
            cPhase = backupPhase;
            hit = instance_create(x + 2, y + 16, obj_swordhit);
            hit.image_xscale = -1;
            audio_playsound(sndSkill1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isAch &amp;&amp; global.playerHP == global.hp)
{
    if(!global.achievements[34])
    {
        ch = instance_create(0,608,obj_achievements);
        ch.index = 34;
        global.achievements[34] = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
