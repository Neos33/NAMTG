<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_elements</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
alarm[11] = 1;
alarm[10] = 50;
image_alpha = 0;
startX = x;
startY = y;

index = 0;

stepScale = 0;

targetAlpha = 0;
targetScale = 0;
alphaGap = 0;
scaleGap = 0;
xgap = 0;
ygap = 0;
targetX = 0;
targetY = 0;

start = 0;

tempAng = 0;
scale = 0;
txt = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_alpha &lt; 1)
{
    image_alpha += 0.05;
    alarm[11] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alphaGap = targetAlpha - 1;
scaleGap = targetScale - 1.2;
xgap = targetX - startX;
ygap = targetY - startY;

if(abs(targetX - x) &gt; abs(xgap / 50) || abs(targetY - y) &gt; abs(ygap / 50))
{
    image_xscale += scaleGap / 50;
    image_yscale += scaleGap / 50;
    image_alpha += alphaGap / 50;
    x += xgap / 50;
    y += ygap / 50;
    alarm[10] = 1;
}
else
{
    x = targetX;
    y = targetY;
    image_xscale = targetScale;
    image_yscale = targetScale;
    image_alpha = targetAlpha;
    start = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_xscale &gt; 0)
{
    image_xscale -= stepScale;
    image_yscale += stepScale;
    alarm[1] = 1;
}
else
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_alpha &gt; 0)
{
    image_alpha -= 0.02;
    image_xscale += 0.1;
    image_yscale += 0.1;
    alarm[0] = 1;
}
else
{
    c = instance_create(x,y,obj_mageElementController);
    c.index = index;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(start)
{
    if(obj_magelv2_combat.selectedIndex &lt; 0)
    {
        tempAng = obj_magelv2_combat.eAngle + 72 * index;
        if(tempAng &lt; 0)
        {
            tempAng += 360;
        }
        x = obj_magelv2_combat.x + 96 * cos(degtorad(tempAng));
        y = obj_magelv2_combat.y - 40 * sin(degtorad(tempAng));
        scale = abs(abs((obj_magelv2_combat.eAngle + 72 * index) mod 360) - 90) / 240 + 0.25;
        image_xscale = scale;
        image_yscale = scale;
        image_alpha = scale;
    }
    else
    {
            x = obj_magelv2_combat.x + 96 * cos(degtorad(obj_magelv2_combat.eAngle + 72 * index));
            y = obj_magelv2_combat.y - 40 * sin(degtorad(obj_magelv2_combat.eAngle + 72 * index));
            if(obj_magelv2_combat.selectedIndex == index)
            {
                alarm[0] = 10;
            }
            else
            {
                stepScale = image_xscale / 25;
                alarm[1] = 10;
            }
            start = false;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_current();
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fontBasicInfoMini);
if(index == 0)
{
    txt = "Fire";
}
else if(index == 1)
{
    txt = "Water";
}
else if(index == 2)
{
    txt = "Gold";
}
else if(index == 3)
{
    txt = "Dark";
}
else if(index == 4)
{
    txt = "Grass";
}
draw_text(x, y - 16 * image_yscale, string(txt));

draw_reset_align();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
