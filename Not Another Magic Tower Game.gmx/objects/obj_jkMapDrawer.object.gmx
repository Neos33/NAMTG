<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blackalpha = 0;
alarm[0] = 1;
mapMoveSpd = 3;
mapZoomSpd = 10;
moveRatio = 1;
sx = view_xview[0];
sy = view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(blackalpha &gt; 0)
{
    blackalpha -= 0.02;
    alarm[3] = 1;
}
else
{
    obj_stepRecord.start = true;
    player.frozen = false;
    global.JKMapView = false;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(blackalpha &lt; 1)
{
    blackalpha += 0.02;
    alarm[2] = 1;
}
else
{
    alarm[3] = 1;
    view_xview[0] = sx;
    view_yview[0] = sy;
    view_wview[0] = 800;
    view_hview[0] = 544;
    drawMap = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(blackalpha &gt; 0)
{
    blackalpha -= 0.02;
    alarm[1] = 1;
}
else
{
    startX = RangeClamp(player.x - 600, 0, RangeClamp(room_width - 1200, 0, room_width - 1200));
    startY = RangeClamp(player.y - 406, 0, RangeClamp(room_width - 912, 0, room_width - 912));
    view_wview[0] = RangeClamp(1200, 0, room_width);
    view_hview[0] = RangeClamp(912, 0, room_height);
    view_xview[0] = startX;
    view_yview[0] = startY;
    if((view_hview[0] / view_wview[0]) &gt; 19 / 25)
    {
        view_wview[0] = view_hview[0] / 19 * 25;
    }
    else
    {
        view_hview[0] = view_wview[0] / 25 * 19;
    }
    movable = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(blackalpha &lt; 1)
{
    blackalpha += 0.02;
    alarm[0] = 1;
}
else
{
    drawMap = true;
    alarm[1] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movable)
{
    moveRatio = view_wview[0] / 800;
    if(keyboard_check(global.leftbutton))
    {
        startX = RangeClamp(view_xview[0] - mapMoveSpd * moveRatio, 0,room_width - view_wview[0]);
    }
    if(keyboard_check(global.rightbutton))
    {
        startX = RangeClamp(view_xview[0] + mapMoveSpd * moveRatio, 0,room_width - view_wview[0]);
    }
    if(keyboard_check(global.upbutton))
    {
        startY = RangeClamp(view_yview[0] - mapMoveSpd * moveRatio, 0,room_height - view_hview[0]);
    }
    if(keyboard_check(global.rightbutton))
    {
        startY = RangeClamp(view_yview[0] + mapMoveSpd * moveRatio, 0,room_height - view_hview[0]);
    }
    view_xview[0] = startX;
    view_yview[0] = startY;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movable)
{
    startW = RangeClamp(view_wview - mapMoveSpd, 0, room_width);
    startH = RangeClamp(view_hview - mapMoveSpd, 0, room_height);
    if((startH / startW) &gt; 19 / 25)
    {
        startW = startH / 19 * 25;
    }
    else
    {
        startH = startW / 25 * 19;
    }
    wGap = view_wview[0] - startW;
    hGap = view_hview[0] - startH;
    view_wview[0] = startW;
    view_hview[0] = startH;
    startX = RangeClamp(view_xview[0] - wGap / 2, 0, room_width);
    startY = RangeClamp(view_yview[0] - hGap / 2, 0, room_height);
    view_xview[0] = startX;
    view_yview[0] = startY;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movable)
{
    startW = RangeClamp(view_wview + mapMoveSpd, 0, room_width);
    startH = RangeClamp(view_hview + mapMoveSpd, 0, room_height);
    if((startH / startW) &gt; 19 / 25)
    {
        startW = startH / 19 * 25;
    }
    else
    {
        startH = startW / 25 * 19;
    }
    wGap = view_wview[0] - startW;
    hGap = view_hview[0] - startH;
    view_wview[0] = startW;
    view_hview[0] = startH;
    startX = RangeClamp(view_xview[0] - wGap / 2, 0, room_width);
    startY = RangeClamp(view_yview[0] - hGap / 2, 0, room_height);
    view_xview[0] = startX;
    view_yview[0] = startY;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(blackalpha);
draw_set_color(c_black);
draw_rectangle(view_xview[0], view_yview[0], view_xview[0] + view_wview[0], view_yview[0] + view_hview[0], false);


draw_reset_color();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movable)
{
    movable = false;
    alarm[2] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
