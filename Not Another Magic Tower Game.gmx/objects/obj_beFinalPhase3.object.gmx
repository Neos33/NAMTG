<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bePhase3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_beFinalPhasePrototype</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s = 0;
count1 = 0;
dir = 0;
subdir = 0;
b1 = 0;
b2 = 0;
finalDir = 0;
mc = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
alarm[11] = 1;
image_xscale = 0.7;
image_yscale = 0.7;
count1 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_alpha &lt; 1)
{
    image_alpha += 0.02;
    alarm[11] = 1;
}
else
{
    mc = instance_create(x,y,obj_beFinalMagicCircle);
    //alarm[0] = 70;
    //alarm[1] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>finalDir = 90;
for(i = 0; i &lt; 5; i+=1)
{
    rodElement[i] = instance_create(x + 40 * (i - 2) * cos(degtorad(finalDir)), y - 40 * (i - 2) * sin(degtorad(finalDir)), obj_beFinalRodElement);
    rodElement[i].dir = finalDir;
    rodElement[i].type = 2;
    rodElement[i].index = i - 2;
    rodElement[i].image_blend = c_silver;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = point_direction(x,y,obj_beFinalPhase1.x,obj_beFinalPhase1.y);
subdir = random_range(0, 359);
for(var i = 0; i &lt; 6; i+= 1)
{
    b1 = instance_create(x + 80 * cos(degtorad(dir)), y - 80 * sin(degtorad(dir)), obj_beFinalBullet5);
    b1.speed = 2;
    b1.direction = subdir + i * 60;
    b1.image_index = 1;
    b2 = instance_create(x + 80 * cos(degtorad(dir + 180)), y - 80 * sin(degtorad(dir + 180)), obj_beFinalBullet5);
    b2.speed = 2;
    b2.direction = 360 - (subdir + i * 60);
    b2.image_index = 2;
}
sound_fix(snd_touhou_attack3);
alarm[6] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(point_distance(x,y,400, 250) &lt; 8)
{
    move_towards_point(400, 250, 8);
    alarm[5] = 1;
}
else
{
    hspeed = 0;
    vspeed = 0;
    x = 400;
    y = 250;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_beFinalBullet3)
{
    speed = 1.5;
    direction = random_range(0,359);
    image_angle = direction - 90;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
for(var i = 0; i &lt; 20; i+= 1)
{
    s = instance_create(x,y,obj_beFinalBullet3);
    s.speed = 3;
    if(count1 mod 2 == 0)
    {
        s.image_index = 0;
        s.direction = i * 18;
    }
    else
    {
        s.image_index = 3;
        s.direction = 9 + i * 18;      
    }
}

sound_fix(snd_touhou_attack3);

count1 += 1;
alarm[3] = 40;

/*if(count1 == 0)
{
    for(i = 0; i &lt;=  5; i += 1)
    {
        p = instance_create(250, (tempI + i) * 30, obj_beFinalBullet3);
        p.image_angle = 270 - 90;
    }
}
else if(count1 == 1)
{
    for(i = 0; i &lt;=  5; i += 1)
    {
        p = instance_create(550, (tempI + i) * 30, obj_beFinalBullet3);
        p.image_angle = 270 - 90;
    }
}
else if(count1 == 2)
{
    pangle = point_direction(0,0,800,608);
    for(i = 0; i &lt;= 6; i += 1)
    {
        p = instance_create(100 / 3 * (tempI / 5 * 6 + i), 76 / 3 * (tempI / 5 * 6 + i), obj_beFinalBullet3);
        p.image_angle = pangle - 90;
    }
}
else if(count1 == 3)
{
    pangle = point_direction(800,0,0,608);
    for(i = 0; i &lt;= 6; i += 1)
    {
        p = instance_create(800 - 100 / 3 * (tempI / 5 * 6 + i), 76 / 3 * (tempI / 5 * 6 + i), obj_beFinalBullet3);
        p.image_angle = pangle - 90;
    }
}
if(tempI &lt; 20)
{
    tempI += 5;
    alarm[3] = 1;
}
else
{
    tempI = 0;
    count1 += 1;
}
if(count1 == 4)
{
    alarm[4] = 40;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(mc)
{
    mc.x = x;
    mc.y = y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
