<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_jkDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 8;


transport = false;
go = false;
ind = 0;
warpX = 0;
warpY = 0;
totalStar = 0;
allClear = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(player.image_alpha &gt; 0)
{
    player.image_alpha -= 0.05;
    alarm[11] = 1;
}
else
{
    obj_stepRecord.alarm[3] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(place_meeting(x,y,player))
{
    if((room == ExtraJKBonus || obj_stepRecord.start) &amp;&amp; keyboard_check_pressed(global.upbutton))
    {
        if(!transport)
        {
            transport = true;
            obj_stepRecord.start = false;
            player.frozen = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(transport)
{
    if(abs(player.x - x) &gt; 1)
    {
         if(player.x &gt; x)
         {
            player.hspeed = -1;
         }
         else
         {
          player.hspeed = 1;
         }
    }
    else
    {
     player.hspeed = 0;
     player.x = x;
     go = true;
    }
}

if(go)
{
    player.sprite_index = sprPlayerBack;
    if(player.image_alpha &gt; 0)
    {
        player.image_alpha -= 0.02;
        player.image_xscale -= 0.01;
        player.image_yscale -= 0.01;
    }
    else
    {
        with(player)
        {
            instance_destroy();
        }
        if(ind &gt;= 0)
        {
            
            with(obj_stepRecord)
            {
                if(global.ExtraJkBest[ind] == 0 || global.ExtraJkBest[ind] &gt; (personIndex + 1))
                {
                    global.ExtraJkBest[ind] = personIndex + 1;
                }
                if(personIndex &lt; star3)
                {
                    star = 3;
                }
                else if(personIndex &lt; star2)
                {
                    star = 2;
                }
                else if(personIndex &lt; star1)
                {
                    star = 1;
                }
                else
                {
                    star = 0;
                }
                if(star &gt; global.ExtraJkStar[ind])
                {
                    global.ExtraJkStar[ind] = star;
                }
            }
        }
        //transition_kind = 21;
        //transition_steps = 80;
        instance_create(warpX, warpY, player);
        if(obj_stepRecord.ind &lt; 9)
        {
            global.ExtraJKPortalPressed[obj_stepRecord.ind] = true;
        }
        totalStar = 0;
        allClear = true;
        for(var i = 0; i &lt; 10; i += 1)
        {
            if(global.ExtraJkBest[i] == 0)
            {
                allClear = false;
            }
            else
            {
                totalStar += global.ExtraJkStar[i];
            }
        }
        if(allClear &amp;&amp; !global.achievements[54])
        {
            var ch = instance_create(0,608,obj_achievements);
            ch.index = 54;
            global.achievements[54] = 1;
        }
        if(totalStar == 30 &amp;&amp; !global.achievements[55])
        {
            if(instance_exists(obj_achievements))
            {
                var ch = instance_create(0,680,obj_achievements);
            }
            else
            {
                var ch = instance_create(0,608,obj_achievements);
            }
            ch.index = 55;
            global.achievements[55] = 1;
        }
        room_goto(ExtraJKPortal);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
